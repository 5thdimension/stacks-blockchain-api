{
  "openapi": "3.0.2",
  "servers": [
    {
      "url": "http://localhost:3999/",
      "description": "Local"
    },
    {
      "url": "https://stacks-node-api-latest.argon.blockstack.xyz/",
      "description": "Testnet (Argon)"
    }
  ],
  "info": {
    "title": "Stacks 2.0 Blockchain API",
    "version": "1.0.0",
    "description": "This is the documentation for the Stacks 2.0 Blockchain API.\n\nIt is comprised of two parts; the Stacks Blockchain API and the Stacks Core API.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/614feab5c108d292bffa#?env%5BStacks%20Blockchain%20API%5D=W3sia2V5Ijoic3R4X2FkZHJlc3MiLCJ2YWx1ZSI6IlNUMlRKUkhESE1ZQlE0MTdIRkIwQkRYNDMwVFFBNVBYUlg2NDk1RzFWIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJibG9ja19pZCIsInZhbHVlIjoiMHgiLCJlbmFibGVkIjp0cnVlfSx7ImtleSI6Im9mZnNldCIsInZhbHVlIjoiMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfdHgiLCJ2YWx1ZSI6IjIwMCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoibGltaXRfYmxvY2siLCJ2YWx1ZSI6IjMwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJ0eF9pZCIsInZhbHVlIjoiMHg1NDA5MGMxNmE3MDJiNzUzYjQzMTE0ZTg4NGJjMTlhODBhNzk2MzhmZDQ0OWE0MGY4MDY4Y2RmMDAzY2RlNmUwIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9pZCIsInZhbHVlIjoiU1RKVFhFSlBKUFBWRE5BOUIwNTJOU1JSQkdRQ0ZOS1ZTMTc4VkdIMS5oZWxsb193b3JsZFxuIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJidGNfYWRkcmVzcyIsInZhbHVlIjoiYWJjIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9hZGRyZXNzIiwidmFsdWUiOiJTVEpUWEVKUEpQUFZETkE5QjA1Mk5TUlJCR1FDRk5LVlMxNzhWR0gxIiwiZW5hYmxlZCI6dHJ1ZX0seyJrZXkiOiJjb250cmFjdF9uYW1lIiwidmFsdWUiOiJoZWxsb193b3JsZCIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWFwIiwidmFsdWUiOiJzdG9yZSIsImVuYWJsZWQiOnRydWV9LHsia2V5IjoiY29udHJhY3RfbWV0aG9kIiwidmFsdWUiOiJnZXQtdmFsdWUiLCJlbmFibGVkIjp0cnVlfV0=)\n\n## Design\n\n### Stacks Core API vs Stacks Blockchain API\nThe blockchain's Rust implementation exposes a JSON RPC endpoint (\"Stacks Core API\"), which can be used to interface with the blockchain.\nIt can be used directly. [See the documentation for the `stacks-blockchain` in its Github repository](https://github.com/blockstack/stacks-blockchain/)\n\nAll `/v2/` routes a proxied to a Blockstack PBC-hosted Stacks Node. For a trustless architecture, you should make these requests to a self-hosted node.\n\nAll `/extended/` routes are provided by the Stacks 2.0 Blockchain API directly. They extend the Stacks Core API capabilities to make it easier to integrate with.\n\n### Pagination\nTo make API responses more compact, lists returned by the API are paginated. For lists, the response body includes: \n  \n  - `limit`: the number of list items return per response\n  - `offset`: the number of elements to skip (starting from `0`)\n  - `total`: the number of all available list items\n  - `results`: the array of list items (length of array equals the set limit)\n\nUsing the `limit` and `offset` properties, you can paginate through the entire list by increasing the offset by the limit until you reach the total.\n"
  },
  "paths": {
    "/extended/v1/faucets/stx": {
      "parameters": [
        {
          "name": "address",
          "in": "query",
          "description": "STX address",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Get STX tokens",
        "description": "Get STX tokens for the testnet",
        "tags": [
          "Faucets"
        ],
        "operationId": "run_faucet_stx",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "POST request that runs the faucet",
                  "title": "RunFaucetResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the faucet call was successful"
                    },
                    "txId": {
                      "type": "string",
                      "description": "The transaction ID for the faucet call"
                    },
                    "txRaw": {
                      "type": "string",
                      "description": "Raw transaction in hex string representation"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "txId": "0xf2f0402f9f4c4d43b382690c4f7b97e24d5ff5dd5c619e3615daa64dca7ef4bc",
                  "txRaw": "80800000000400164247d6f2b425ac5771423ae6c80c754f7172b0000000000000003200000000000000b400008537046ff1008368baaa3ff2235122c556b89dad4f9df0639b924cf32a44b866497e49846b24191e711b21faaae96ca0542e4a140168484740b94211cececb3303020000000000051ab52c45b1a7977204f17ac0b6f48306aea2dbb8e9000000000007a12046617563657400000000000000000000000000000000000000000000000000000000"
                }
              }
            }
          },
          "500": {
            "description": "Failed to run faucet"
          }
        }
      }
    },
    "/extended/v1/faucets/btc": {
      "parameters": [
        {
          "name": "address",
          "in": "query",
          "description": "BTC address",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Get BTC tokens",
        "description": "Get BTC tokens for the testnet",
        "tags": [
          "Faucets"
        ],
        "operationId": "run_faucet_btc",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "POST request that runs the faucet",
                  "title": "RunFaucetResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "success"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the faucet call was successful"
                    },
                    "txId": {
                      "type": "string",
                      "description": "The transaction ID for the faucet call"
                    },
                    "txRaw": {
                      "type": "string",
                      "description": "Raw transaction in hex string representation"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "txId": "0xf2f0402f9f4c4d43b382690c4f7b97e24d5ff5dd5c619e3615daa64dca7ef4bc",
                  "txRaw": "80800000000400164247d6f2b425ac5771423ae6c80c754f7172b0000000000000003200000000000000b400008537046ff1008368baaa3ff2235122c556b89dad4f9df0639b924cf32a44b866497e49846b24191e711b21faaae96ca0542e4a140168484740b94211cececb3303020000000000051ab52c45b1a7977204f17ac0b6f48306aea2dbb8e9000000000007a12046617563657400000000000000000000000000000000000000000000000000000000"
                }
              }
            }
          },
          "500": {
            "description": "Failed to run faucet"
          }
        }
      }
    },
    "/extended/v1/tx": {
      "get": {
        "summary": "Get recent transactions",
        "tags": [
          "Transactions"
        ],
        "operationId": "get_transaction_list",
        "description": "Get all recently mined transactions\n\nIf using TypeScript, import typings for this response from our types package:\n\n`import type { TransactionResults } from '@blockstack/stacks-blockchain-api-types';`\n",
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns transactions",
                  "title": "TransactionResults",
                  "type": "object",
                  "required": [
                    "results",
                    "limit",
                    "offset",
                    "total"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "maximum": 200,
                      "description": "The number of transactions to return"
                    },
                    "offset": {
                      "type": "integer",
                      "description": "The number to transactions to skip (starting at `0`)"
                    },
                    "total": {
                      "type": "integer",
                      "description": "The number of transactions available"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "title": "Transaction",
                        "description": "Describes all transaction types on Stacks 2.0 blockchain",
                        "oneOf": [
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "TokenTransferTransaction",
                            "description": "Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset",
                            "type": "object",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                "type": "object",
                                "required": [
                                  "tx_id",
                                  "tx_index",
                                  "block_hash",
                                  "block_height",
                                  "burn_block_time",
                                  "burn_block_time_iso",
                                  "canonical",
                                  "tx_status",
                                  "fee_rate",
                                  "sender_address",
                                  "sponsored",
                                  "post_condition_mode"
                                ],
                                "properties": {
                                  "block_hash": {
                                    "type": "string",
                                    "description": "Hash of the blocked this transactions was associated with"
                                  },
                                  "block_height": {
                                    "type": "integer",
                                    "description": "Height of the block this transactions was associated with"
                                  },
                                  "burn_block_time": {
                                    "type": "integer",
                                    "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                  },
                                  "burn_block_time_iso": {
                                    "type": "string",
                                    "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                  },
                                  "canonical": {
                                    "type": "boolean",
                                    "description": "Set to `true` if block corresponds to the canonical chain tip"
                                  },
                                  "tx_id": {
                                    "type": "string",
                                    "description": "Transaction ID"
                                  },
                                  "tx_index": {
                                    "type": "integer",
                                    "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                  },
                                  "tx_status": {
                                    "description": "Status of the transaction",
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "TransactionStatus",
                                    "type": "string",
                                    "enum": [
                                      "success",
                                      "pending",
                                      "abort_by_response",
                                      "abort_by_post_condition"
                                    ]
                                  },
                                  "tx_result": {
                                    "type": "object",
                                    "required": [
                                      "hex",
                                      "repr"
                                    ],
                                    "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                    "additionalProperties": false,
                                    "properties": {
                                      "hex": {
                                        "type": "string",
                                        "description": "Hex string representing the value fo the transaction result"
                                      },
                                      "repr": {
                                        "type": "string",
                                        "description": "Readable string of the transaction result"
                                      }
                                    }
                                  },
                                  "fee_rate": {
                                    "type": "string",
                                    "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                  },
                                  "sender_address": {
                                    "type": "string",
                                    "description": "Address of the transaction initiator"
                                  },
                                  "sponsored": {
                                    "type": "boolean",
                                    "description": "Denotes whether the originating account is the same as the paying account"
                                  },
                                  "sponsor_address": {
                                    "type": "string"
                                  },
                                  "post_condition_mode": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionMode",
                                    "description": "",
                                    "type": "string",
                                    "enum": [
                                      "allow",
                                      "deny"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tx_type",
                                  "token_transfer",
                                  "events"
                                ],
                                "properties": {
                                  "tx_type": {
                                    "type": "string",
                                    "enum": [
                                      "token_transfer"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "description": "List of transaction events",
                                    "items": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "type": "object",
                                      "title": "TransactionEvent",
                                      "oneOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventSmartContractLog",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "contract_log"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "smart_contract_log"
                                                  ]
                                                },
                                                "contract_log": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "contract_id",
                                                    "topic",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "contract_id": {
                                                      "type": "string"
                                                    },
                                                    "topic": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventStxAsset",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "stx_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "title": "TransactionEventAsset",
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "TransactionEventAssetType",
                                                      "type": "string",
                                                      "enum": [
                                                        "transfer",
                                                        "mint",
                                                        "burn"
                                                      ]
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "amount"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventNonFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "non_fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "token_transfer": {
                                    "type": "object",
                                    "required": [
                                      "recipient_address",
                                      "amount",
                                      "memo"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "recipient_address": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string",
                                        "description": "Transfer amount as Integer string (64-bit unsigned integer)"
                                      },
                                      "memo": {
                                        "type": "string",
                                        "description": "Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "SmartContractTransaction",
                            "description": "Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                "type": "object",
                                "required": [
                                  "tx_id",
                                  "tx_index",
                                  "block_hash",
                                  "block_height",
                                  "burn_block_time",
                                  "burn_block_time_iso",
                                  "canonical",
                                  "tx_status",
                                  "fee_rate",
                                  "sender_address",
                                  "sponsored",
                                  "post_condition_mode"
                                ],
                                "properties": {
                                  "block_hash": {
                                    "type": "string",
                                    "description": "Hash of the blocked this transactions was associated with"
                                  },
                                  "block_height": {
                                    "type": "integer",
                                    "description": "Height of the block this transactions was associated with"
                                  },
                                  "burn_block_time": {
                                    "type": "integer",
                                    "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                  },
                                  "burn_block_time_iso": {
                                    "type": "string",
                                    "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                  },
                                  "canonical": {
                                    "type": "boolean",
                                    "description": "Set to `true` if block corresponds to the canonical chain tip"
                                  },
                                  "tx_id": {
                                    "type": "string",
                                    "description": "Transaction ID"
                                  },
                                  "tx_index": {
                                    "type": "integer",
                                    "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                  },
                                  "tx_status": {
                                    "description": "Status of the transaction",
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "TransactionStatus",
                                    "type": "string",
                                    "enum": [
                                      "success",
                                      "pending",
                                      "abort_by_response",
                                      "abort_by_post_condition"
                                    ]
                                  },
                                  "tx_result": {
                                    "type": "object",
                                    "required": [
                                      "hex",
                                      "repr"
                                    ],
                                    "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                    "additionalProperties": false,
                                    "properties": {
                                      "hex": {
                                        "type": "string",
                                        "description": "Hex string representing the value fo the transaction result"
                                      },
                                      "repr": {
                                        "type": "string",
                                        "description": "Readable string of the transaction result"
                                      }
                                    }
                                  },
                                  "fee_rate": {
                                    "type": "string",
                                    "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                  },
                                  "sender_address": {
                                    "type": "string",
                                    "description": "Address of the transaction initiator"
                                  },
                                  "sponsored": {
                                    "type": "boolean",
                                    "description": "Denotes whether the originating account is the same as the paying account"
                                  },
                                  "sponsor_address": {
                                    "type": "string"
                                  },
                                  "post_condition_mode": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionMode",
                                    "description": "",
                                    "type": "string",
                                    "enum": [
                                      "allow",
                                      "deny"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tx_type",
                                  "smart_contract",
                                  "events"
                                ],
                                "properties": {
                                  "tx_type": {
                                    "type": "string",
                                    "enum": [
                                      "smart_contract"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "description": "List of transaction events",
                                    "items": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "type": "object",
                                      "title": "TransactionEvent",
                                      "oneOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventSmartContractLog",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "contract_log"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "smart_contract_log"
                                                  ]
                                                },
                                                "contract_log": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "contract_id",
                                                    "topic",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "contract_id": {
                                                      "type": "string"
                                                    },
                                                    "topic": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventStxAsset",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "stx_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "title": "TransactionEventAsset",
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "TransactionEventAssetType",
                                                      "type": "string",
                                                      "enum": [
                                                        "transfer",
                                                        "mint",
                                                        "burn"
                                                      ]
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "amount"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventNonFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "non_fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "smart_contract": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "contract_id",
                                      "source_code"
                                    ],
                                    "properties": {
                                      "contract_id": {
                                        "type": "string",
                                        "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                      },
                                      "source_code": {
                                        "type": "string",
                                        "description": "Clarity code of the smart contract being deployed"
                                      }
                                    }
                                  },
                                  "post_conditions": {
                                    "type": "array",
                                    "items": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "PostCondition",
                                      "description": "Post-conditionscan limit the damage done to a user's assets",
                                      "anyOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionStx",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "amount",
                                                "type"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionFungibleConditionCode",
                                                  "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent_equal_to",
                                                    "sent_greater_than",
                                                    "sent_greater_than_or_equal_to",
                                                    "sent_less_than",
                                                    "sent_less_than_or_equal_to"
                                                  ]
                                                },
                                                "amount": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "stx"
                                                  ],
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionFungible",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "amount",
                                                "type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionFungibleConditionCode",
                                                  "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent_equal_to",
                                                    "sent_greater_than",
                                                    "sent_greater_than_or_equal_to",
                                                    "sent_less_than",
                                                    "sent_less_than_or_equal_to"
                                                  ]
                                                },
                                                "type": {
                                                  "enum": [
                                                    "fungible"
                                                  ],
                                                  "type": "string"
                                                },
                                                "amount": {
                                                  "type": "string"
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "required": [
                                                    "asset_name",
                                                    "contract_address",
                                                    "contract_name"
                                                  ],
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_name": {
                                                      "type": "string"
                                                    },
                                                    "contract_address": {
                                                      "type": "string"
                                                    },
                                                    "contract_name": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionNonFungible",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "type",
                                                "asset_value",
                                                "asset"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionNonFungibleConditionCode",
                                                  "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent",
                                                    "not_sent"
                                                  ]
                                                },
                                                "type": {
                                                  "enum": [
                                                    "non_fungible"
                                                  ],
                                                  "type": "string"
                                                },
                                                "asset_value": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "hex",
                                                    "repr"
                                                  ],
                                                  "properties": {
                                                    "hex": {
                                                      "type": "string"
                                                    },
                                                    "repr": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "required": [
                                                    "asset_name",
                                                    "contract_address",
                                                    "contract_name"
                                                  ],
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_name": {
                                                      "type": "string"
                                                    },
                                                    "contract_address": {
                                                      "type": "string"
                                                    },
                                                    "contract_name": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "ContractCallTransaction",
                            "description": "Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                "type": "object",
                                "required": [
                                  "tx_id",
                                  "tx_index",
                                  "block_hash",
                                  "block_height",
                                  "burn_block_time",
                                  "burn_block_time_iso",
                                  "canonical",
                                  "tx_status",
                                  "fee_rate",
                                  "sender_address",
                                  "sponsored",
                                  "post_condition_mode"
                                ],
                                "properties": {
                                  "block_hash": {
                                    "type": "string",
                                    "description": "Hash of the blocked this transactions was associated with"
                                  },
                                  "block_height": {
                                    "type": "integer",
                                    "description": "Height of the block this transactions was associated with"
                                  },
                                  "burn_block_time": {
                                    "type": "integer",
                                    "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                  },
                                  "burn_block_time_iso": {
                                    "type": "string",
                                    "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                  },
                                  "canonical": {
                                    "type": "boolean",
                                    "description": "Set to `true` if block corresponds to the canonical chain tip"
                                  },
                                  "tx_id": {
                                    "type": "string",
                                    "description": "Transaction ID"
                                  },
                                  "tx_index": {
                                    "type": "integer",
                                    "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                  },
                                  "tx_status": {
                                    "description": "Status of the transaction",
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "TransactionStatus",
                                    "type": "string",
                                    "enum": [
                                      "success",
                                      "pending",
                                      "abort_by_response",
                                      "abort_by_post_condition"
                                    ]
                                  },
                                  "tx_result": {
                                    "type": "object",
                                    "required": [
                                      "hex",
                                      "repr"
                                    ],
                                    "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                    "additionalProperties": false,
                                    "properties": {
                                      "hex": {
                                        "type": "string",
                                        "description": "Hex string representing the value fo the transaction result"
                                      },
                                      "repr": {
                                        "type": "string",
                                        "description": "Readable string of the transaction result"
                                      }
                                    }
                                  },
                                  "fee_rate": {
                                    "type": "string",
                                    "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                  },
                                  "sender_address": {
                                    "type": "string",
                                    "description": "Address of the transaction initiator"
                                  },
                                  "sponsored": {
                                    "type": "boolean",
                                    "description": "Denotes whether the originating account is the same as the paying account"
                                  },
                                  "sponsor_address": {
                                    "type": "string"
                                  },
                                  "post_condition_mode": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionMode",
                                    "description": "",
                                    "type": "string",
                                    "enum": [
                                      "allow",
                                      "deny"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tx_type",
                                  "contract_call",
                                  "post_conditions",
                                  "events"
                                ],
                                "properties": {
                                  "tx_type": {
                                    "type": "string",
                                    "enum": [
                                      "contract_call"
                                    ]
                                  },
                                  "events": {
                                    "type": "array",
                                    "description": "List of transaction events",
                                    "items": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "type": "object",
                                      "title": "TransactionEvent",
                                      "oneOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventSmartContractLog",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "contract_log"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "smart_contract_log"
                                                  ]
                                                },
                                                "contract_log": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "contract_id",
                                                    "topic",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "contract_id": {
                                                      "type": "string"
                                                    },
                                                    "topic": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventStxAsset",
                                          "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "stx_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "title": "TransactionEventAsset",
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "TransactionEventAssetType",
                                                      "type": "string",
                                                      "enum": [
                                                        "transfer",
                                                        "mint",
                                                        "burn"
                                                      ]
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "amount"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEventNonFungibleAsset",
                                          "allOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "required": [
                                                "event_index"
                                              ],
                                              "properties": {
                                                "event_index": {
                                                  "type": "integer"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "event_type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "event_type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "non_fungible_token_asset"
                                                  ]
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "asset_event_type",
                                                    "asset_id",
                                                    "sender",
                                                    "recipient",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "asset_event_type": {
                                                      "type": "string"
                                                    },
                                                    "asset_id": {
                                                      "type": "string"
                                                    },
                                                    "sender": {
                                                      "type": "string"
                                                    },
                                                    "recipient": {
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "contract_call": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "contract_id",
                                      "function_name",
                                      "function_signature"
                                    ],
                                    "properties": {
                                      "contract_id": {
                                        "type": "string",
                                        "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                      },
                                      "function_name": {
                                        "type": "string",
                                        "description": "Name of the Clarity function to be invoked"
                                      },
                                      "function_signature": {
                                        "type": "string",
                                        "description": "Function definition, including function name and type as well as parameter names and types"
                                      },
                                      "function_args": {
                                        "type": "array",
                                        "description": "List of arguments used to invoke the function",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "required": [
                                            "hex",
                                            "repr",
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "hex": {
                                              "type": "string"
                                            },
                                            "repr": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "post_conditions": {
                                    "type": "array",
                                    "items": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "PostCondition",
                                      "description": "Post-conditionscan limit the damage done to a user's assets",
                                      "anyOf": [
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionStx",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "amount",
                                                "type"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionFungibleConditionCode",
                                                  "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent_equal_to",
                                                    "sent_greater_than",
                                                    "sent_greater_than_or_equal_to",
                                                    "sent_less_than",
                                                    "sent_less_than_or_equal_to"
                                                  ]
                                                },
                                                "amount": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "enum": [
                                                    "stx"
                                                  ],
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionFungible",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "amount",
                                                "type",
                                                "asset"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionFungibleConditionCode",
                                                  "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent_equal_to",
                                                    "sent_greater_than",
                                                    "sent_greater_than_or_equal_to",
                                                    "sent_less_than",
                                                    "sent_less_than_or_equal_to"
                                                  ]
                                                },
                                                "type": {
                                                  "enum": [
                                                    "fungible"
                                                  ],
                                                  "type": "string"
                                                },
                                                "amount": {
                                                  "type": "string"
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "required": [
                                                    "asset_name",
                                                    "contract_address",
                                                    "contract_name"
                                                  ],
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_name": {
                                                      "type": "string"
                                                    },
                                                    "contract_address": {
                                                      "type": "string"
                                                    },
                                                    "contract_name": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostConditionNonFungible",
                                          "type": "object",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "principal"
                                              ],
                                              "properties": {
                                                "principal": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionPrincipal",
                                                  "type": "object",
                                                  "anyOf": [
                                                    {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "description": "Principal Origin",
                                                      "required": [
                                                        "type_id"
                                                      ],
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_origin"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Standard",
                                                      "required": [
                                                        "type_id",
                                                        "address"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_standard"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "description": "Principal Contract",
                                                      "required": [
                                                        "type_id",
                                                        "address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "type_id": {
                                                          "type": "string",
                                                          "description": "String literal of type `PostConditionPrincipalType`",
                                                          "enum": [
                                                            "principal_contract"
                                                          ]
                                                        },
                                                        "address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "condition_code",
                                                "type",
                                                "asset_value",
                                                "asset"
                                              ],
                                              "properties": {
                                                "condition_code": {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "title": "PostConditionNonFungibleConditionCode",
                                                  "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                  "type": "string",
                                                  "enum": [
                                                    "sent",
                                                    "not_sent"
                                                  ]
                                                },
                                                "type": {
                                                  "enum": [
                                                    "non_fungible"
                                                  ],
                                                  "type": "string"
                                                },
                                                "asset_value": {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "hex",
                                                    "repr"
                                                  ],
                                                  "properties": {
                                                    "hex": {
                                                      "type": "string"
                                                    },
                                                    "repr": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "asset": {
                                                  "type": "object",
                                                  "required": [
                                                    "asset_name",
                                                    "contract_address",
                                                    "contract_name"
                                                  ],
                                                  "additionalProperties": false,
                                                  "properties": {
                                                    "asset_name": {
                                                      "type": "string"
                                                    },
                                                    "contract_address": {
                                                      "type": "string"
                                                    },
                                                    "contract_name": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "PoisonMicroblockTransaction",
                            "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                "type": "object",
                                "required": [
                                  "tx_id",
                                  "tx_index",
                                  "block_hash",
                                  "block_height",
                                  "burn_block_time",
                                  "burn_block_time_iso",
                                  "canonical",
                                  "tx_status",
                                  "fee_rate",
                                  "sender_address",
                                  "sponsored",
                                  "post_condition_mode"
                                ],
                                "properties": {
                                  "block_hash": {
                                    "type": "string",
                                    "description": "Hash of the blocked this transactions was associated with"
                                  },
                                  "block_height": {
                                    "type": "integer",
                                    "description": "Height of the block this transactions was associated with"
                                  },
                                  "burn_block_time": {
                                    "type": "integer",
                                    "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                  },
                                  "burn_block_time_iso": {
                                    "type": "string",
                                    "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                  },
                                  "canonical": {
                                    "type": "boolean",
                                    "description": "Set to `true` if block corresponds to the canonical chain tip"
                                  },
                                  "tx_id": {
                                    "type": "string",
                                    "description": "Transaction ID"
                                  },
                                  "tx_index": {
                                    "type": "integer",
                                    "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                  },
                                  "tx_status": {
                                    "description": "Status of the transaction",
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "TransactionStatus",
                                    "type": "string",
                                    "enum": [
                                      "success",
                                      "pending",
                                      "abort_by_response",
                                      "abort_by_post_condition"
                                    ]
                                  },
                                  "tx_result": {
                                    "type": "object",
                                    "required": [
                                      "hex",
                                      "repr"
                                    ],
                                    "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                    "additionalProperties": false,
                                    "properties": {
                                      "hex": {
                                        "type": "string",
                                        "description": "Hex string representing the value fo the transaction result"
                                      },
                                      "repr": {
                                        "type": "string",
                                        "description": "Readable string of the transaction result"
                                      }
                                    }
                                  },
                                  "fee_rate": {
                                    "type": "string",
                                    "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                  },
                                  "sender_address": {
                                    "type": "string",
                                    "description": "Address of the transaction initiator"
                                  },
                                  "sponsored": {
                                    "type": "boolean",
                                    "description": "Denotes whether the originating account is the same as the paying account"
                                  },
                                  "sponsor_address": {
                                    "type": "string"
                                  },
                                  "post_condition_mode": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionMode",
                                    "description": "",
                                    "type": "string",
                                    "enum": [
                                      "allow",
                                      "deny"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tx_type",
                                  "poison_microblock"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "tx_type": {
                                    "type": "string",
                                    "enum": [
                                      "poison_microblock"
                                    ]
                                  },
                                  "poison_microblock": {
                                    "type": "object",
                                    "required": [
                                      "microblock_header_1",
                                      "microblock_header_2"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "microblock_header_1": {
                                        "type": "string",
                                        "description": "Hex encoded microblock header"
                                      },
                                      "microblock_header_2": {
                                        "type": "string",
                                        "description": "Hex encoded microblock header"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "CoinbaseTransaction",
                            "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                "type": "object",
                                "required": [
                                  "tx_id",
                                  "tx_index",
                                  "block_hash",
                                  "block_height",
                                  "burn_block_time",
                                  "burn_block_time_iso",
                                  "canonical",
                                  "tx_status",
                                  "fee_rate",
                                  "sender_address",
                                  "sponsored",
                                  "post_condition_mode"
                                ],
                                "properties": {
                                  "block_hash": {
                                    "type": "string",
                                    "description": "Hash of the blocked this transactions was associated with"
                                  },
                                  "block_height": {
                                    "type": "integer",
                                    "description": "Height of the block this transactions was associated with"
                                  },
                                  "burn_block_time": {
                                    "type": "integer",
                                    "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                  },
                                  "burn_block_time_iso": {
                                    "type": "string",
                                    "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                  },
                                  "canonical": {
                                    "type": "boolean",
                                    "description": "Set to `true` if block corresponds to the canonical chain tip"
                                  },
                                  "tx_id": {
                                    "type": "string",
                                    "description": "Transaction ID"
                                  },
                                  "tx_index": {
                                    "type": "integer",
                                    "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                  },
                                  "tx_status": {
                                    "description": "Status of the transaction",
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "TransactionStatus",
                                    "type": "string",
                                    "enum": [
                                      "success",
                                      "pending",
                                      "abort_by_response",
                                      "abort_by_post_condition"
                                    ]
                                  },
                                  "tx_result": {
                                    "type": "object",
                                    "required": [
                                      "hex",
                                      "repr"
                                    ],
                                    "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                    "additionalProperties": false,
                                    "properties": {
                                      "hex": {
                                        "type": "string",
                                        "description": "Hex string representing the value fo the transaction result"
                                      },
                                      "repr": {
                                        "type": "string",
                                        "description": "Readable string of the transaction result"
                                      }
                                    }
                                  },
                                  "fee_rate": {
                                    "type": "string",
                                    "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                  },
                                  "sender_address": {
                                    "type": "string",
                                    "description": "Address of the transaction initiator"
                                  },
                                  "sponsored": {
                                    "type": "boolean",
                                    "description": "Denotes whether the originating account is the same as the paying account"
                                  },
                                  "sponsor_address": {
                                    "type": "string"
                                  },
                                  "post_condition_mode": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionMode",
                                    "description": "",
                                    "type": "string",
                                    "enum": [
                                      "allow",
                                      "deny"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tx_type",
                                  "coinbase_payload"
                                ],
                                "properties": {
                                  "tx_type": {
                                    "type": "string",
                                    "enum": [
                                      "coinbase"
                                    ]
                                  },
                                  "coinbase_payload": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "data"
                                    ],
                                    "properties": {
                                      "data": {
                                        "type": "string",
                                        "description": "Hex encoded 32-byte scratch space for block leader's use"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "limit": 10,
                  "offset": 0,
                  "total": 101922,
                  "results": [
                    {
                      "tx_id": "0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9",
                      "tx_status": "success",
                      "tx_type": "coinbase",
                      "fee_rate": "0",
                      "sender_address": "ST3WCQ6S0DFT7YHF53M8JPKGDS1N1GSSR91677XF1",
                      "sponsored": false,
                      "post_condition_mode": "deny",
                      "block_hash": "0x58412b50266debd0c35b1a20348ad9c0f17e5525fb155a97033256c83c9e2491",
                      "block_height": 3231,
                      "burn_block_time": 1594230455,
                      "canonical": true,
                      "tx_index": 0,
                      "coinbase_payload": {
                        "data": "0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/tx/stream": {
      "get": {
        "summary": "Stream transaction events",
        "description": "Stream of recent transaction events",
        "tags": [
          "Transactions"
        ],
        "operationId": "stream_transaction_events",
        "parameters": [
          {
            "name": "protocol",
            "in": "query",
            "description": "Streaming protocol",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "eventsource",
                "websocket"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/extended/v1/tx/{tx_id}": {
      "parameters": [
        {
          "name": "tx_id",
          "in": "path",
          "description": "Hash of transaction",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get transaction",
        "tags": [
          "Transactions"
        ],
        "operationId": "get_transaction_by_id",
        "description": "Get a specific transaction by ID\n\n`import type { Transaction } from '@blockstack/stacks-blockchain-api-types';`\n",
        "responses": {
          "200": {
            "description": "Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "title": "Transaction",
                  "description": "Describes all transaction types on Stacks 2.0 blockchain",
                  "oneOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "TokenTransferTransaction",
                      "description": "Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset",
                      "type": "object",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                          "type": "object",
                          "required": [
                            "tx_id",
                            "tx_index",
                            "block_hash",
                            "block_height",
                            "burn_block_time",
                            "burn_block_time_iso",
                            "canonical",
                            "tx_status",
                            "fee_rate",
                            "sender_address",
                            "sponsored",
                            "post_condition_mode"
                          ],
                          "properties": {
                            "block_hash": {
                              "type": "string",
                              "description": "Hash of the blocked this transactions was associated with"
                            },
                            "block_height": {
                              "type": "integer",
                              "description": "Height of the block this transactions was associated with"
                            },
                            "burn_block_time": {
                              "type": "integer",
                              "description": "Unix timestamp (in seconds) indicating when this block was mined"
                            },
                            "burn_block_time_iso": {
                              "type": "string",
                              "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                            },
                            "canonical": {
                              "type": "boolean",
                              "description": "Set to `true` if block corresponds to the canonical chain tip"
                            },
                            "tx_id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                            },
                            "tx_status": {
                              "description": "Status of the transaction",
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "TransactionStatus",
                              "type": "string",
                              "enum": [
                                "success",
                                "pending",
                                "abort_by_response",
                                "abort_by_post_condition"
                              ]
                            },
                            "tx_result": {
                              "type": "object",
                              "required": [
                                "hex",
                                "repr"
                              ],
                              "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                              "additionalProperties": false,
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "Hex string representing the value fo the transaction result"
                                },
                                "repr": {
                                  "type": "string",
                                  "description": "Readable string of the transaction result"
                                }
                              }
                            },
                            "fee_rate": {
                              "type": "string",
                              "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                            },
                            "sender_address": {
                              "type": "string",
                              "description": "Address of the transaction initiator"
                            },
                            "sponsored": {
                              "type": "boolean",
                              "description": "Denotes whether the originating account is the same as the paying account"
                            },
                            "sponsor_address": {
                              "type": "string"
                            },
                            "post_condition_mode": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "PostConditionMode",
                              "description": "",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tx_type",
                            "token_transfer",
                            "events"
                          ],
                          "properties": {
                            "tx_type": {
                              "type": "string",
                              "enum": [
                                "token_transfer"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "description": "List of transaction events",
                              "items": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEvent",
                                "oneOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventSmartContractLog",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "contract_log"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "smart_contract_log"
                                            ]
                                          },
                                          "contract_log": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "contract_id",
                                              "topic",
                                              "value"
                                            ],
                                            "properties": {
                                              "contract_id": {
                                                "type": "string"
                                              },
                                              "topic": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventStxAsset",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "stx_asset"
                                            ]
                                          },
                                          "asset": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "type": "object",
                                            "title": "TransactionEventAsset",
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_event_type": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "TransactionEventAssetType",
                                                "type": "string",
                                                "enum": [
                                                  "transfer",
                                                  "mint",
                                                  "burn"
                                                ]
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "amount"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventNonFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "non_fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "value"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "token_transfer": {
                              "type": "object",
                              "required": [
                                "recipient_address",
                                "amount",
                                "memo"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "recipient_address": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string",
                                  "description": "Transfer amount as Integer string (64-bit unsigned integer)"
                                },
                                "memo": {
                                  "type": "string",
                                  "description": "Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "SmartContractTransaction",
                      "description": "Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                          "type": "object",
                          "required": [
                            "tx_id",
                            "tx_index",
                            "block_hash",
                            "block_height",
                            "burn_block_time",
                            "burn_block_time_iso",
                            "canonical",
                            "tx_status",
                            "fee_rate",
                            "sender_address",
                            "sponsored",
                            "post_condition_mode"
                          ],
                          "properties": {
                            "block_hash": {
                              "type": "string",
                              "description": "Hash of the blocked this transactions was associated with"
                            },
                            "block_height": {
                              "type": "integer",
                              "description": "Height of the block this transactions was associated with"
                            },
                            "burn_block_time": {
                              "type": "integer",
                              "description": "Unix timestamp (in seconds) indicating when this block was mined"
                            },
                            "burn_block_time_iso": {
                              "type": "string",
                              "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                            },
                            "canonical": {
                              "type": "boolean",
                              "description": "Set to `true` if block corresponds to the canonical chain tip"
                            },
                            "tx_id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                            },
                            "tx_status": {
                              "description": "Status of the transaction",
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "TransactionStatus",
                              "type": "string",
                              "enum": [
                                "success",
                                "pending",
                                "abort_by_response",
                                "abort_by_post_condition"
                              ]
                            },
                            "tx_result": {
                              "type": "object",
                              "required": [
                                "hex",
                                "repr"
                              ],
                              "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                              "additionalProperties": false,
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "Hex string representing the value fo the transaction result"
                                },
                                "repr": {
                                  "type": "string",
                                  "description": "Readable string of the transaction result"
                                }
                              }
                            },
                            "fee_rate": {
                              "type": "string",
                              "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                            },
                            "sender_address": {
                              "type": "string",
                              "description": "Address of the transaction initiator"
                            },
                            "sponsored": {
                              "type": "boolean",
                              "description": "Denotes whether the originating account is the same as the paying account"
                            },
                            "sponsor_address": {
                              "type": "string"
                            },
                            "post_condition_mode": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "PostConditionMode",
                              "description": "",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tx_type",
                            "smart_contract",
                            "events"
                          ],
                          "properties": {
                            "tx_type": {
                              "type": "string",
                              "enum": [
                                "smart_contract"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "description": "List of transaction events",
                              "items": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEvent",
                                "oneOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventSmartContractLog",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "contract_log"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "smart_contract_log"
                                            ]
                                          },
                                          "contract_log": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "contract_id",
                                              "topic",
                                              "value"
                                            ],
                                            "properties": {
                                              "contract_id": {
                                                "type": "string"
                                              },
                                              "topic": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventStxAsset",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "stx_asset"
                                            ]
                                          },
                                          "asset": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "type": "object",
                                            "title": "TransactionEventAsset",
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_event_type": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "TransactionEventAssetType",
                                                "type": "string",
                                                "enum": [
                                                  "transfer",
                                                  "mint",
                                                  "burn"
                                                ]
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "amount"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventNonFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "non_fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "value"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "smart_contract": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "contract_id",
                                "source_code"
                              ],
                              "properties": {
                                "contract_id": {
                                  "type": "string",
                                  "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                },
                                "source_code": {
                                  "type": "string",
                                  "description": "Clarity code of the smart contract being deployed"
                                }
                              }
                            },
                            "post_conditions": {
                              "type": "array",
                              "items": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "PostCondition",
                                "description": "Post-conditionscan limit the damage done to a user's assets",
                                "anyOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionStx",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "amount",
                                          "type"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionFungibleConditionCode",
                                            "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                            "type": "string",
                                            "enum": [
                                              "sent_equal_to",
                                              "sent_greater_than",
                                              "sent_greater_than_or_equal_to",
                                              "sent_less_than",
                                              "sent_less_than_or_equal_to"
                                            ]
                                          },
                                          "amount": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "stx"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionFungible",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "amount",
                                          "type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionFungibleConditionCode",
                                            "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                            "type": "string",
                                            "enum": [
                                              "sent_equal_to",
                                              "sent_greater_than",
                                              "sent_greater_than_or_equal_to",
                                              "sent_less_than",
                                              "sent_less_than_or_equal_to"
                                            ]
                                          },
                                          "type": {
                                            "enum": [
                                              "fungible"
                                            ],
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string"
                                          },
                                          "asset": {
                                            "type": "object",
                                            "required": [
                                              "asset_name",
                                              "contract_address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_name": {
                                                "type": "string"
                                              },
                                              "contract_address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionNonFungible",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "type",
                                          "asset_value",
                                          "asset"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionNonFungibleConditionCode",
                                            "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                            "type": "string",
                                            "enum": [
                                              "sent",
                                              "not_sent"
                                            ]
                                          },
                                          "type": {
                                            "enum": [
                                              "non_fungible"
                                            ],
                                            "type": "string"
                                          },
                                          "asset_value": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "hex",
                                              "repr"
                                            ],
                                            "properties": {
                                              "hex": {
                                                "type": "string"
                                              },
                                              "repr": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "asset": {
                                            "type": "object",
                                            "required": [
                                              "asset_name",
                                              "contract_address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_name": {
                                                "type": "string"
                                              },
                                              "contract_address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "ContractCallTransaction",
                      "description": "Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                          "type": "object",
                          "required": [
                            "tx_id",
                            "tx_index",
                            "block_hash",
                            "block_height",
                            "burn_block_time",
                            "burn_block_time_iso",
                            "canonical",
                            "tx_status",
                            "fee_rate",
                            "sender_address",
                            "sponsored",
                            "post_condition_mode"
                          ],
                          "properties": {
                            "block_hash": {
                              "type": "string",
                              "description": "Hash of the blocked this transactions was associated with"
                            },
                            "block_height": {
                              "type": "integer",
                              "description": "Height of the block this transactions was associated with"
                            },
                            "burn_block_time": {
                              "type": "integer",
                              "description": "Unix timestamp (in seconds) indicating when this block was mined"
                            },
                            "burn_block_time_iso": {
                              "type": "string",
                              "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                            },
                            "canonical": {
                              "type": "boolean",
                              "description": "Set to `true` if block corresponds to the canonical chain tip"
                            },
                            "tx_id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                            },
                            "tx_status": {
                              "description": "Status of the transaction",
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "TransactionStatus",
                              "type": "string",
                              "enum": [
                                "success",
                                "pending",
                                "abort_by_response",
                                "abort_by_post_condition"
                              ]
                            },
                            "tx_result": {
                              "type": "object",
                              "required": [
                                "hex",
                                "repr"
                              ],
                              "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                              "additionalProperties": false,
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "Hex string representing the value fo the transaction result"
                                },
                                "repr": {
                                  "type": "string",
                                  "description": "Readable string of the transaction result"
                                }
                              }
                            },
                            "fee_rate": {
                              "type": "string",
                              "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                            },
                            "sender_address": {
                              "type": "string",
                              "description": "Address of the transaction initiator"
                            },
                            "sponsored": {
                              "type": "boolean",
                              "description": "Denotes whether the originating account is the same as the paying account"
                            },
                            "sponsor_address": {
                              "type": "string"
                            },
                            "post_condition_mode": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "PostConditionMode",
                              "description": "",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tx_type",
                            "contract_call",
                            "post_conditions",
                            "events"
                          ],
                          "properties": {
                            "tx_type": {
                              "type": "string",
                              "enum": [
                                "contract_call"
                              ]
                            },
                            "events": {
                              "type": "array",
                              "description": "List of transaction events",
                              "items": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEvent",
                                "oneOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventSmartContractLog",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "contract_log"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "smart_contract_log"
                                            ]
                                          },
                                          "contract_log": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "contract_id",
                                              "topic",
                                              "value"
                                            ],
                                            "properties": {
                                              "contract_id": {
                                                "type": "string"
                                              },
                                              "topic": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventStxAsset",
                                    "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "stx_asset"
                                            ]
                                          },
                                          "asset": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "type": "object",
                                            "title": "TransactionEventAsset",
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_event_type": {
                                                "$schema": "http://json-schema.org/draft-07/schema#",
                                                "title": "TransactionEventAssetType",
                                                "type": "string",
                                                "enum": [
                                                  "transfer",
                                                  "mint",
                                                  "burn"
                                                ]
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "amount"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "amount": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventNonFungibleAsset",
                                    "allOf": [
                                      {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "required": [
                                          "event_index"
                                        ],
                                        "properties": {
                                          "event_index": {
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "event_type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "event_type": {
                                            "type": "string",
                                            "enum": [
                                              "non_fungible_token_asset"
                                            ]
                                          },
                                          "asset": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "asset_event_type",
                                              "asset_id",
                                              "sender",
                                              "recipient",
                                              "value"
                                            ],
                                            "properties": {
                                              "asset_event_type": {
                                                "type": "string"
                                              },
                                              "asset_id": {
                                                "type": "string"
                                              },
                                              "sender": {
                                                "type": "string"
                                              },
                                              "recipient": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "hex",
                                                  "repr"
                                                ],
                                                "properties": {
                                                  "hex": {
                                                    "type": "string"
                                                  },
                                                  "repr": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "contract_call": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "contract_id",
                                "function_name",
                                "function_signature"
                              ],
                              "properties": {
                                "contract_id": {
                                  "type": "string",
                                  "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                },
                                "function_name": {
                                  "type": "string",
                                  "description": "Name of the Clarity function to be invoked"
                                },
                                "function_signature": {
                                  "type": "string",
                                  "description": "Function definition, including function name and type as well as parameter names and types"
                                },
                                "function_args": {
                                  "type": "array",
                                  "description": "List of arguments used to invoke the function",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "hex",
                                      "repr",
                                      "name",
                                      "type"
                                    ],
                                    "properties": {
                                      "hex": {
                                        "type": "string"
                                      },
                                      "repr": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "post_conditions": {
                              "type": "array",
                              "items": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "PostCondition",
                                "description": "Post-conditionscan limit the damage done to a user's assets",
                                "anyOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionStx",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "amount",
                                          "type"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionFungibleConditionCode",
                                            "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                            "type": "string",
                                            "enum": [
                                              "sent_equal_to",
                                              "sent_greater_than",
                                              "sent_greater_than_or_equal_to",
                                              "sent_less_than",
                                              "sent_less_than_or_equal_to"
                                            ]
                                          },
                                          "amount": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "enum": [
                                              "stx"
                                            ],
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionFungible",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "amount",
                                          "type",
                                          "asset"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionFungibleConditionCode",
                                            "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                            "type": "string",
                                            "enum": [
                                              "sent_equal_to",
                                              "sent_greater_than",
                                              "sent_greater_than_or_equal_to",
                                              "sent_less_than",
                                              "sent_less_than_or_equal_to"
                                            ]
                                          },
                                          "type": {
                                            "enum": [
                                              "fungible"
                                            ],
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string"
                                          },
                                          "asset": {
                                            "type": "object",
                                            "required": [
                                              "asset_name",
                                              "contract_address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_name": {
                                                "type": "string"
                                              },
                                              "contract_address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "PostConditionNonFungible",
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "principal"
                                        ],
                                        "properties": {
                                          "principal": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionPrincipal",
                                            "type": "object",
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "description": "Principal Origin",
                                                "required": [
                                                  "type_id"
                                                ],
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_origin"
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Standard",
                                                "required": [
                                                  "type_id",
                                                  "address"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_standard"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "description": "Principal Contract",
                                                "required": [
                                                  "type_id",
                                                  "address",
                                                  "contract_name"
                                                ],
                                                "additionalProperties": false,
                                                "properties": {
                                                  "type_id": {
                                                    "type": "string",
                                                    "description": "String literal of type `PostConditionPrincipalType`",
                                                    "enum": [
                                                      "principal_contract"
                                                    ]
                                                  },
                                                  "address": {
                                                    "type": "string"
                                                  },
                                                  "contract_name": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition_code",
                                          "type",
                                          "asset_value",
                                          "asset"
                                        ],
                                        "properties": {
                                          "condition_code": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "PostConditionNonFungibleConditionCode",
                                            "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                            "type": "string",
                                            "enum": [
                                              "sent",
                                              "not_sent"
                                            ]
                                          },
                                          "type": {
                                            "enum": [
                                              "non_fungible"
                                            ],
                                            "type": "string"
                                          },
                                          "asset_value": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "hex",
                                              "repr"
                                            ],
                                            "properties": {
                                              "hex": {
                                                "type": "string"
                                              },
                                              "repr": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "asset": {
                                            "type": "object",
                                            "required": [
                                              "asset_name",
                                              "contract_address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "asset_name": {
                                                "type": "string"
                                              },
                                              "contract_address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "PoisonMicroblockTransaction",
                      "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                          "type": "object",
                          "required": [
                            "tx_id",
                            "tx_index",
                            "block_hash",
                            "block_height",
                            "burn_block_time",
                            "burn_block_time_iso",
                            "canonical",
                            "tx_status",
                            "fee_rate",
                            "sender_address",
                            "sponsored",
                            "post_condition_mode"
                          ],
                          "properties": {
                            "block_hash": {
                              "type": "string",
                              "description": "Hash of the blocked this transactions was associated with"
                            },
                            "block_height": {
                              "type": "integer",
                              "description": "Height of the block this transactions was associated with"
                            },
                            "burn_block_time": {
                              "type": "integer",
                              "description": "Unix timestamp (in seconds) indicating when this block was mined"
                            },
                            "burn_block_time_iso": {
                              "type": "string",
                              "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                            },
                            "canonical": {
                              "type": "boolean",
                              "description": "Set to `true` if block corresponds to the canonical chain tip"
                            },
                            "tx_id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                            },
                            "tx_status": {
                              "description": "Status of the transaction",
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "TransactionStatus",
                              "type": "string",
                              "enum": [
                                "success",
                                "pending",
                                "abort_by_response",
                                "abort_by_post_condition"
                              ]
                            },
                            "tx_result": {
                              "type": "object",
                              "required": [
                                "hex",
                                "repr"
                              ],
                              "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                              "additionalProperties": false,
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "Hex string representing the value fo the transaction result"
                                },
                                "repr": {
                                  "type": "string",
                                  "description": "Readable string of the transaction result"
                                }
                              }
                            },
                            "fee_rate": {
                              "type": "string",
                              "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                            },
                            "sender_address": {
                              "type": "string",
                              "description": "Address of the transaction initiator"
                            },
                            "sponsored": {
                              "type": "boolean",
                              "description": "Denotes whether the originating account is the same as the paying account"
                            },
                            "sponsor_address": {
                              "type": "string"
                            },
                            "post_condition_mode": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "PostConditionMode",
                              "description": "",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tx_type",
                            "poison_microblock"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "tx_type": {
                              "type": "string",
                              "enum": [
                                "poison_microblock"
                              ]
                            },
                            "poison_microblock": {
                              "type": "object",
                              "required": [
                                "microblock_header_1",
                                "microblock_header_2"
                              ],
                              "additionalProperties": false,
                              "properties": {
                                "microblock_header_1": {
                                  "type": "string",
                                  "description": "Hex encoded microblock header"
                                },
                                "microblock_header_2": {
                                  "type": "string",
                                  "description": "Hex encoded microblock header"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "CoinbaseTransaction",
                      "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                          "type": "object",
                          "required": [
                            "tx_id",
                            "tx_index",
                            "block_hash",
                            "block_height",
                            "burn_block_time",
                            "burn_block_time_iso",
                            "canonical",
                            "tx_status",
                            "fee_rate",
                            "sender_address",
                            "sponsored",
                            "post_condition_mode"
                          ],
                          "properties": {
                            "block_hash": {
                              "type": "string",
                              "description": "Hash of the blocked this transactions was associated with"
                            },
                            "block_height": {
                              "type": "integer",
                              "description": "Height of the block this transactions was associated with"
                            },
                            "burn_block_time": {
                              "type": "integer",
                              "description": "Unix timestamp (in seconds) indicating when this block was mined"
                            },
                            "burn_block_time_iso": {
                              "type": "string",
                              "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                            },
                            "canonical": {
                              "type": "boolean",
                              "description": "Set to `true` if block corresponds to the canonical chain tip"
                            },
                            "tx_id": {
                              "type": "string",
                              "description": "Transaction ID"
                            },
                            "tx_index": {
                              "type": "integer",
                              "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                            },
                            "tx_status": {
                              "description": "Status of the transaction",
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "TransactionStatus",
                              "type": "string",
                              "enum": [
                                "success",
                                "pending",
                                "abort_by_response",
                                "abort_by_post_condition"
                              ]
                            },
                            "tx_result": {
                              "type": "object",
                              "required": [
                                "hex",
                                "repr"
                              ],
                              "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                              "additionalProperties": false,
                              "properties": {
                                "hex": {
                                  "type": "string",
                                  "description": "Hex string representing the value fo the transaction result"
                                },
                                "repr": {
                                  "type": "string",
                                  "description": "Readable string of the transaction result"
                                }
                              }
                            },
                            "fee_rate": {
                              "type": "string",
                              "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                            },
                            "sender_address": {
                              "type": "string",
                              "description": "Address of the transaction initiator"
                            },
                            "sponsored": {
                              "type": "boolean",
                              "description": "Denotes whether the originating account is the same as the paying account"
                            },
                            "sponsor_address": {
                              "type": "string"
                            },
                            "post_condition_mode": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "PostConditionMode",
                              "description": "",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tx_type",
                            "coinbase_payload"
                          ],
                          "properties": {
                            "tx_type": {
                              "type": "string",
                              "enum": [
                                "coinbase"
                              ]
                            },
                            "coinbase_payload": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "data"
                              ],
                              "properties": {
                                "data": {
                                  "type": "string",
                                  "description": "Hex encoded 32-byte scratch space for block leader's use"
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "example": {
                  "tx_id": "0x5e9f3933e358df6a73fec0d47ce3e1062c20812c129f5294e6f37a8d27c051d9",
                  "tx_status": "success",
                  "tx_type": "coinbase",
                  "fee_rate": "0",
                  "sender_address": "ST3WCQ6S0DFT7YHF53M8JPKGDS1N1GSSR91677XF1",
                  "sponsored": false,
                  "post_condition_mode": "deny",
                  "block_hash": "0x58412b50266debd0c35b1a20348ad9c0f17e5525fb155a97033256c83c9e2491",
                  "block_height": 3231,
                  "burn_block_time": 1594230455,
                  "canonical": true,
                  "tx_index": 0,
                  "coinbase_payload": {
                    "data": "0x0000000000000000000000000000000000000000000000000000000000000000"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cannot find transaction for given ID"
          }
        }
      }
    },
    "/v2/transactions": {
      "post": {
        "summary": "Broadcast raw transaction",
        "tags": [
          "Transactions"
        ],
        "description": "Broadcast raw transactions on the network. You can use the [stacks-transactions-js](https://github.com/blockstack/stacks-transactions-js) project to generate a raw transaction payload.",
        "operationId": "post_core_node_transactions",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "00000000010400bed38c2aadffa348931bcb542880ff79d607afec000000000000000000000000000000c800012b0b1fff6cccd0974966dcd665835838f0985be508e1322e09fb3d751eca132c492bda720f9ef1768d14fdabed6127560ba52d5e3ac470dcb60b784e97dc88c9030200000000000516df0ba3e79792be7be5e50a370289accfc8c9e032000000000000303974657374206d656d6f00000000000000000000000000000000000000000000000000"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful post of a raw tx to the node's mempool"
          },
          "400": {
            "description": "Rejections result in a 400 error"
          }
        }
      }
    },
    "/extended/v1/block": {
      "get": {
        "summary": "Get recent blocks",
        "description": "Get all recently mined blocks",
        "tags": [
          "Blocks"
        ],
        "operationId": "get_block_list",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of blocks",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns blocks",
                  "additionalProperties": false,
                  "title": "BlockListResponse",
                  "type": "object",
                  "required": [
                    "results",
                    "limit",
                    "offset",
                    "total"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "maximum": 30,
                      "description": "The number of blocks to return"
                    },
                    "offset": {
                      "type": "integer",
                      "description": "The number to blocks to skip (starting at `0`)",
                      "default": 0
                    },
                    "total": {
                      "type": "integer",
                      "description": "The number of blocks available"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Block",
                        "description": "A block",
                        "type": "object",
                        "required": [
                          "canonical",
                          "height",
                          "hash",
                          "parent_block_hash",
                          "txs",
                          "burn_block_time",
                          "burn_block_time_iso"
                        ],
                        "properties": {
                          "canonical": {
                            "type": "boolean",
                            "description": "Set to `true` if block corresponds to the canonical chain tip"
                          },
                          "height": {
                            "type": "integer",
                            "description": "Height of the block"
                          },
                          "hash": {
                            "type": "string",
                            "description": "Hash representing the block"
                          },
                          "parent_block_hash": {
                            "type": "string",
                            "description": "Hash of the prant block"
                          },
                          "burn_block_time": {
                            "type": "number",
                            "description": "Unix timestamp (in seconds) indicating when this block was mined."
                          },
                          "burn_block_time_iso": {
                            "type": "string",
                            "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined."
                          },
                          "txs": {
                            "type": "array",
                            "description": "List of transactions included in the block",
                            "items": {
                              "type": "string",
                              "description": "Transaction ID"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "limit": 20,
                  "offset": 0,
                  "total": 3275,
                  "results": [
                    {
                      "canonical": true,
                      "height": 3275,
                      "hash": "0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f",
                      "parent_block_hash": "0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f",
                      "burn_block_time": 1594233639,
                      "txs": [
                        "0x66557c219c6b0cdb40681ecf79a69f03654d88ef1910651a7db0b078f58af5ca"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/block/{block_hash}": {
      "parameters": [
        {
          "name": "block_hash",
          "in": "path",
          "description": "Hash of the block",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get block",
        "description": "Get a specific block by hash",
        "tags": [
          "Blocks"
        ],
        "operationId": "get_block_by_hash",
        "responses": {
          "200": {
            "description": "Block",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "Block",
                  "description": "A block",
                  "type": "object",
                  "required": [
                    "canonical",
                    "height",
                    "hash",
                    "parent_block_hash",
                    "txs",
                    "burn_block_time",
                    "burn_block_time_iso"
                  ],
                  "properties": {
                    "canonical": {
                      "type": "boolean",
                      "description": "Set to `true` if block corresponds to the canonical chain tip"
                    },
                    "height": {
                      "type": "integer",
                      "description": "Height of the block"
                    },
                    "hash": {
                      "type": "string",
                      "description": "Hash representing the block"
                    },
                    "parent_block_hash": {
                      "type": "string",
                      "description": "Hash of the prant block"
                    },
                    "burn_block_time": {
                      "type": "number",
                      "description": "Unix timestamp (in seconds) indicating when this block was mined."
                    },
                    "burn_block_time_iso": {
                      "type": "string",
                      "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) indicating when this block was mined."
                    },
                    "txs": {
                      "type": "array",
                      "description": "List of transactions included in the block",
                      "items": {
                        "type": "string",
                        "description": "Transaction ID"
                      }
                    }
                  }
                },
                "example": {
                  "canonical": true,
                  "height": 3275,
                  "hash": "0xe77ba8cf6bb7c0e4f64adc83356289ed467d31a22354907b4bb814590058430f",
                  "parent_block_hash": "0x75ab21ef25cbff2caa14c27d830ed7886a4d1522e1b6f9e5dc3b59ccf73ed49f",
                  "burn_block_time": 1594233639,
                  "txs": [
                    "0x66557c219c6b0cdb40681ecf79a69f03654d88ef1910651a7db0b078f58af5ca"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Cannot find block with given ID",
            "content": {
              "application/json": {
                "example": {
                  "error": "cannot find block by hash 0xabc123"
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/contract/{contract_id}": {
      "get": {
        "summary": "Get contract info",
        "description": "Get contract info using the contract ID",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "get_contract_by_id",
        "responses": {
          "200": {
            "description": "Contract found",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "title": "SmartContractTransaction",
                  "description": "Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",
                  "allOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                      "type": "object",
                      "required": [
                        "tx_id",
                        "tx_index",
                        "block_hash",
                        "block_height",
                        "burn_block_time",
                        "burn_block_time_iso",
                        "canonical",
                        "tx_status",
                        "fee_rate",
                        "sender_address",
                        "sponsored",
                        "post_condition_mode"
                      ],
                      "properties": {
                        "block_hash": {
                          "type": "string",
                          "description": "Hash of the blocked this transactions was associated with"
                        },
                        "block_height": {
                          "type": "integer",
                          "description": "Height of the block this transactions was associated with"
                        },
                        "burn_block_time": {
                          "type": "integer",
                          "description": "Unix timestamp (in seconds) indicating when this block was mined"
                        },
                        "burn_block_time_iso": {
                          "type": "string",
                          "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                        },
                        "canonical": {
                          "type": "boolean",
                          "description": "Set to `true` if block corresponds to the canonical chain tip"
                        },
                        "tx_id": {
                          "type": "string",
                          "description": "Transaction ID"
                        },
                        "tx_index": {
                          "type": "integer",
                          "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                        },
                        "tx_status": {
                          "description": "Status of the transaction",
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "TransactionStatus",
                          "type": "string",
                          "enum": [
                            "success",
                            "pending",
                            "abort_by_response",
                            "abort_by_post_condition"
                          ]
                        },
                        "tx_result": {
                          "type": "object",
                          "required": [
                            "hex",
                            "repr"
                          ],
                          "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                          "additionalProperties": false,
                          "properties": {
                            "hex": {
                              "type": "string",
                              "description": "Hex string representing the value fo the transaction result"
                            },
                            "repr": {
                              "type": "string",
                              "description": "Readable string of the transaction result"
                            }
                          }
                        },
                        "fee_rate": {
                          "type": "string",
                          "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                        },
                        "sender_address": {
                          "type": "string",
                          "description": "Address of the transaction initiator"
                        },
                        "sponsored": {
                          "type": "boolean",
                          "description": "Denotes whether the originating account is the same as the paying account"
                        },
                        "sponsor_address": {
                          "type": "string"
                        },
                        "post_condition_mode": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "PostConditionMode",
                          "description": "",
                          "type": "string",
                          "enum": [
                            "allow",
                            "deny"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "tx_type",
                        "smart_contract",
                        "events"
                      ],
                      "properties": {
                        "tx_type": {
                          "type": "string",
                          "enum": [
                            "smart_contract"
                          ]
                        },
                        "events": {
                          "type": "array",
                          "description": "List of transaction events",
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "TransactionEvent",
                            "oneOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEventSmartContractLog",
                                "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "required": [
                                      "event_index"
                                    ],
                                    "properties": {
                                      "event_index": {
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "event_type",
                                      "contract_log"
                                    ],
                                    "properties": {
                                      "event_type": {
                                        "type": "string",
                                        "enum": [
                                          "smart_contract_log"
                                        ]
                                      },
                                      "contract_log": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "contract_id",
                                          "topic",
                                          "value"
                                        ],
                                        "properties": {
                                          "contract_id": {
                                            "type": "string"
                                          },
                                          "topic": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "hex",
                                              "repr"
                                            ],
                                            "properties": {
                                              "hex": {
                                                "type": "string"
                                              },
                                              "repr": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEventStxAsset",
                                "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "required": [
                                      "event_index"
                                    ],
                                    "properties": {
                                      "event_index": {
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "event_type",
                                      "asset"
                                    ],
                                    "properties": {
                                      "event_type": {
                                        "type": "string",
                                        "enum": [
                                          "stx_asset"
                                        ]
                                      },
                                      "asset": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "type": "object",
                                        "title": "TransactionEventAsset",
                                        "additionalProperties": false,
                                        "properties": {
                                          "asset_event_type": {
                                            "$schema": "http://json-schema.org/draft-07/schema#",
                                            "title": "TransactionEventAssetType",
                                            "type": "string",
                                            "enum": [
                                              "transfer",
                                              "mint",
                                              "burn"
                                            ]
                                          },
                                          "asset_id": {
                                            "type": "string"
                                          },
                                          "sender": {
                                            "type": "string"
                                          },
                                          "recipient": {
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEventFungibleAsset",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "required": [
                                      "event_index"
                                    ],
                                    "properties": {
                                      "event_index": {
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "event_type",
                                      "asset"
                                    ],
                                    "properties": {
                                      "event_type": {
                                        "type": "string",
                                        "enum": [
                                          "fungible_token_asset"
                                        ]
                                      },
                                      "asset": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "asset_event_type",
                                          "asset_id",
                                          "sender",
                                          "recipient",
                                          "amount"
                                        ],
                                        "properties": {
                                          "asset_event_type": {
                                            "type": "string"
                                          },
                                          "asset_id": {
                                            "type": "string"
                                          },
                                          "sender": {
                                            "type": "string"
                                          },
                                          "recipient": {
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "TransactionEventNonFungibleAsset",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "required": [
                                      "event_index"
                                    ],
                                    "properties": {
                                      "event_index": {
                                        "type": "integer"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "event_type",
                                      "asset"
                                    ],
                                    "properties": {
                                      "event_type": {
                                        "type": "string",
                                        "enum": [
                                          "non_fungible_token_asset"
                                        ]
                                      },
                                      "asset": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "asset_event_type",
                                          "asset_id",
                                          "sender",
                                          "recipient",
                                          "value"
                                        ],
                                        "properties": {
                                          "asset_event_type": {
                                            "type": "string"
                                          },
                                          "asset_id": {
                                            "type": "string"
                                          },
                                          "sender": {
                                            "type": "string"
                                          },
                                          "recipient": {
                                            "type": "string"
                                          },
                                          "value": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "required": [
                                              "hex",
                                              "repr"
                                            ],
                                            "properties": {
                                              "hex": {
                                                "type": "string"
                                              },
                                              "repr": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "smart_contract": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "contract_id",
                            "source_code"
                          ],
                          "properties": {
                            "contract_id": {
                              "type": "string",
                              "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                            },
                            "source_code": {
                              "type": "string",
                              "description": "Clarity code of the smart contract being deployed"
                            }
                          }
                        },
                        "post_conditions": {
                          "type": "array",
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "PostCondition",
                            "description": "Post-conditionscan limit the damage done to a user's assets",
                            "anyOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "PostConditionStx",
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "principal"
                                    ],
                                    "properties": {
                                      "principal": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionPrincipal",
                                        "type": "object",
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Principal Origin",
                                            "required": [
                                              "type_id"
                                            ],
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_origin"
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Standard",
                                            "required": [
                                              "type_id",
                                              "address"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_standard"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Contract",
                                            "required": [
                                              "type_id",
                                              "address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_contract"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition_code",
                                      "amount",
                                      "type"
                                    ],
                                    "properties": {
                                      "condition_code": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionFungibleConditionCode",
                                        "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                        "type": "string",
                                        "enum": [
                                          "sent_equal_to",
                                          "sent_greater_than",
                                          "sent_greater_than_or_equal_to",
                                          "sent_less_than",
                                          "sent_less_than_or_equal_to"
                                        ]
                                      },
                                      "amount": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "enum": [
                                          "stx"
                                        ],
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "PostConditionFungible",
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "principal"
                                    ],
                                    "properties": {
                                      "principal": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionPrincipal",
                                        "type": "object",
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Principal Origin",
                                            "required": [
                                              "type_id"
                                            ],
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_origin"
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Standard",
                                            "required": [
                                              "type_id",
                                              "address"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_standard"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Contract",
                                            "required": [
                                              "type_id",
                                              "address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_contract"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition_code",
                                      "amount",
                                      "type",
                                      "asset"
                                    ],
                                    "properties": {
                                      "condition_code": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionFungibleConditionCode",
                                        "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                        "type": "string",
                                        "enum": [
                                          "sent_equal_to",
                                          "sent_greater_than",
                                          "sent_greater_than_or_equal_to",
                                          "sent_less_than",
                                          "sent_less_than_or_equal_to"
                                        ]
                                      },
                                      "type": {
                                        "enum": [
                                          "fungible"
                                        ],
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string"
                                      },
                                      "asset": {
                                        "type": "object",
                                        "required": [
                                          "asset_name",
                                          "contract_address",
                                          "contract_name"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "asset_name": {
                                            "type": "string"
                                          },
                                          "contract_address": {
                                            "type": "string"
                                          },
                                          "contract_name": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "PostConditionNonFungible",
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "principal"
                                    ],
                                    "properties": {
                                      "principal": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionPrincipal",
                                        "type": "object",
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "description": "Principal Origin",
                                            "required": [
                                              "type_id"
                                            ],
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_origin"
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Standard",
                                            "required": [
                                              "type_id",
                                              "address"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_standard"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "description": "Principal Contract",
                                            "required": [
                                              "type_id",
                                              "address",
                                              "contract_name"
                                            ],
                                            "additionalProperties": false,
                                            "properties": {
                                              "type_id": {
                                                "type": "string",
                                                "description": "String literal of type `PostConditionPrincipalType`",
                                                "enum": [
                                                  "principal_contract"
                                                ]
                                              },
                                              "address": {
                                                "type": "string"
                                              },
                                              "contract_name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition_code",
                                      "type",
                                      "asset_value",
                                      "asset"
                                    ],
                                    "properties": {
                                      "condition_code": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionNonFungibleConditionCode",
                                        "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                        "type": "string",
                                        "enum": [
                                          "sent",
                                          "not_sent"
                                        ]
                                      },
                                      "type": {
                                        "enum": [
                                          "non_fungible"
                                        ],
                                        "type": "string"
                                      },
                                      "asset_value": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "asset": {
                                        "type": "object",
                                        "required": [
                                          "asset_name",
                                          "contract_address",
                                          "contract_name"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "asset_name": {
                                            "type": "string"
                                          },
                                          "contract_address": {
                                            "type": "string"
                                          },
                                          "contract_name": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "tx_id": "0x8122b7ae041120ddc9e2f8108e165912e40ad146399d42d6e6cbca7fd2c8ac28",
                  "tx_status": "success",
                  "tx_type": "smart_contract",
                  "fee_rate": "3000",
                  "sender_address": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1",
                  "sponsored": false,
                  "post_condition_mode": "allow",
                  "block_hash": "0x105685d3d4f251d73b75865b192cefb111dd49f67b8970a95094dc7ecf826caa",
                  "block_height": 3196,
                  "burn_block_time": 1594228322,
                  "canonical": true,
                  "tx_index": 1,
                  "post_conditions": [],
                  "smart_contract": {
                    "contract_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world",
                    "source_code": "(define-constant sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(define-constant recipient 'SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G)\n\n(define-fungible-token novel-token-19)\n(begin (ft-mint? novel-token-19 u12 sender))\n(begin (ft-transfer? novel-token-19 u2 sender recipient))\n\n(define-non-fungible-token hello-nft uint)\n(begin (nft-mint? hello-nft u1 sender))\n(begin (nft-mint? hello-nft u2 sender))\n(begin (nft-transfer? hello-nft u1 sender recipient))\n\n(define-public (test-emit-event)\n    (begin\n        (print \"Event! Hello world\")\n        (ok u1)))\n(begin (test-emit-event))\n\n(define-public (test-event-types)\n    (begin\n        (unwrap-panic (ft-mint? novel-token-19 u3 recipient))\n        (unwrap-panic (nft-mint? hello-nft u2 recipient))\n        (unwrap-panic (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR))\n        (unwrap-panic (stx-burn? u20 tx-sender))\n        (ok u1)))\n\n(define-map store ((key (buff 32))) ((value (buff 32))))\n(define-public (get-value (key (buff 32)))\n    (begin\n        (match (map-get? store ((key key)))\n            entry (ok (get value entry))\n            (err 0))))\n(define-public (set-value (key (buff 32)) (value (buff 32)))\n    (begin\n        (map-set store ((key key)) ((value value)))\n        (ok u1)))"
                  },
                  "events": [
                    {
                      "event_index": 0,
                      "event_type": "fungible_token_asset",
                      "asset": {
                        "asset_event_type": "mint",
                        "asset_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::novel-token-19",
                        "sender": "",
                        "recipient": "SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR",
                        "amount": "12"
                      }
                    },
                    {
                      "event_index": 1,
                      "event_type": "non_fungible_token_asset",
                      "asset": {
                        "asset_event_type": "mint",
                        "asset_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft",
                        "sender": "",
                        "recipient": "SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR",
                        "value": {
                          "hex": "0x0100000000000000000000000000000001",
                          "repr": "1"
                        }
                      }
                    },
                    {
                      "event_index": 2,
                      "event_type": "non_fungible_token_asset",
                      "asset": {
                        "asset_event_type": "mint",
                        "asset_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft",
                        "sender": "",
                        "recipient": "SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR",
                        "value": {
                          "hex": "0x0100000000000000000000000000000002",
                          "repr": "2"
                        }
                      }
                    },
                    {
                      "event_index": 3,
                      "event_type": "smart_contract_log",
                      "contract_log": {
                        "contract_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world",
                        "topic": "print",
                        "value": {
                          "hex": "0x02000000124576656e74212048656c6c6f20776f726c64",
                          "repr": "\"Event! Hello world\""
                        }
                      }
                    },
                    {
                      "event_index": 4,
                      "event_type": "fungible_token_asset",
                      "asset": {
                        "asset_event_type": "transfer",
                        "asset_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::novel-token-19",
                        "sender": "SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR",
                        "recipient": "SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G",
                        "amount": "2"
                      }
                    },
                    {
                      "event_index": 5,
                      "event_type": "non_fungible_token_asset",
                      "asset": {
                        "asset_event_type": "transfer",
                        "asset_id": "STJTXEJPJPPVDNA9B052NSRRBGQCFNKVS178VGH1.hello_world::hello-nft",
                        "sender": "SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR",
                        "recipient": "SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G",
                        "value": {
                          "hex": "0x0100000000000000000000000000000001",
                          "repr": "1"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Cannot find contract of given ID"
          }
        }
      },
      "parameters": [
        {
          "name": "contract_id",
          "in": "path",
          "description": "Contract identifier formatted as `<principal_address>.<contract_name>`",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/extended/v1/contract/{contract_id}/events": {
      "get": {
        "summary": "Get contract events",
        "description": "Get contract events using a contract ID",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "get_contract_events_by_id",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "description": "Contract identifier formatted as `<principal_address>.<contract_name>`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of events",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "title": "TransactionEvent",
                  "oneOf": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "TransactionEventSmartContractLog",
                      "description": "Only present in `smart_contract` and `contract_call` tx types.",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "event_index"
                          ],
                          "properties": {
                            "event_index": {
                              "type": "integer"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "event_type",
                            "contract_log"
                          ],
                          "properties": {
                            "event_type": {
                              "type": "string",
                              "enum": [
                                "smart_contract_log"
                              ]
                            },
                            "contract_log": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "contract_id",
                                "topic",
                                "value"
                              ],
                              "properties": {
                                "contract_id": {
                                  "type": "string"
                                },
                                "topic": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "hex",
                                    "repr"
                                  ],
                                  "properties": {
                                    "hex": {
                                      "type": "string"
                                    },
                                    "repr": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "TransactionEventStxAsset",
                      "description": "Only present in `smart_contract` and `contract_call` tx types.",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "event_index"
                          ],
                          "properties": {
                            "event_index": {
                              "type": "integer"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "event_type",
                            "asset"
                          ],
                          "properties": {
                            "event_type": {
                              "type": "string",
                              "enum": [
                                "stx_asset"
                              ]
                            },
                            "asset": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "type": "object",
                              "title": "TransactionEventAsset",
                              "additionalProperties": false,
                              "properties": {
                                "asset_event_type": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "TransactionEventAssetType",
                                  "type": "string",
                                  "enum": [
                                    "transfer",
                                    "mint",
                                    "burn"
                                  ]
                                },
                                "asset_id": {
                                  "type": "string"
                                },
                                "sender": {
                                  "type": "string"
                                },
                                "recipient": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "TransactionEventFungibleAsset",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "event_index"
                          ],
                          "properties": {
                            "event_index": {
                              "type": "integer"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "event_type",
                            "asset"
                          ],
                          "properties": {
                            "event_type": {
                              "type": "string",
                              "enum": [
                                "fungible_token_asset"
                              ]
                            },
                            "asset": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "asset_event_type",
                                "asset_id",
                                "sender",
                                "recipient",
                                "amount"
                              ],
                              "properties": {
                                "asset_event_type": {
                                  "type": "string"
                                },
                                "asset_id": {
                                  "type": "string"
                                },
                                "sender": {
                                  "type": "string"
                                },
                                "recipient": {
                                  "type": "string"
                                },
                                "amount": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "title": "TransactionEventNonFungibleAsset",
                      "allOf": [
                        {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "type": "object",
                          "required": [
                            "event_index"
                          ],
                          "properties": {
                            "event_index": {
                              "type": "integer"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "event_type",
                            "asset"
                          ],
                          "properties": {
                            "event_type": {
                              "type": "string",
                              "enum": [
                                "non_fungible_token_asset"
                              ]
                            },
                            "asset": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "asset_event_type",
                                "asset_id",
                                "sender",
                                "recipient",
                                "value"
                              ],
                              "properties": {
                                "asset_event_type": {
                                  "type": "string"
                                },
                                "asset_id": {
                                  "type": "string"
                                },
                                "sender": {
                                  "type": "string"
                                },
                                "recipient": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "hex",
                                    "repr"
                                  ],
                                  "properties": {
                                    "hex": {
                                      "type": "string"
                                    },
                                    "repr": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  ]
                },
                "example": {
                  "limit": 20,
                  "offset": 0,
                  "results": [
                    {
                      "event_index": 1,
                      "event_type": "smart_contract_log",
                      "contract_log": {
                        "contract_id": "ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world",
                        "topic": "print",
                        "value": {
                          "hex": "0x02000000124576656e74212048656c6c6f20776f726c64",
                          "repr": "\"Event! Hello world\""
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/contracts/interface/{stacks_address}/{contract_name}": {
      "get": {
        "summary": "Get contract interface",
        "description": "Get contract interface using a `stacks_address` and contract name",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "get_contract_interface",
        "responses": {
          "200": {
            "description": "Contract interface",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request to get contract interface",
                  "title": "ContractInterfaceResponse",
                  "type": "object",
                  "required": [
                    "functions",
                    "variables",
                    "maps",
                    "fungible_tokens",
                    "non_fungible_tokens"
                  ],
                  "properties": {
                    "functions": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of defined methods"
                    },
                    "variables": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of defined variables"
                    },
                    "maps": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of defined data-maps"
                    },
                    "fungible_tokens": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of fungible tokens in the contract"
                    },
                    "non_fungible_tokens": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "List of non-fungible tokens in the contract"
                    }
                  }
                },
                "example": {
                  "functions": [
                    {
                      "name": "get-value",
                      "access": "public",
                      "args": [
                        {
                          "name": "key",
                          "type": {
                            "buffer": {
                              "length": 32
                            }
                          }
                        }
                      ],
                      "outputs": {
                        "type": {
                          "response": {
                            "ok": {
                              "buffer": {
                                "length": 32
                              }
                            },
                            "error": "int128"
                          }
                        }
                      }
                    },
                    {
                      "name": "set-value",
                      "access": "public",
                      "args": [
                        {
                          "name": "key",
                          "type": {
                            "buffer": {
                              "length": 32
                            }
                          }
                        },
                        {
                          "name": "value",
                          "type": {
                            "buffer": {
                              "length": 32
                            }
                          }
                        }
                      ],
                      "outputs": {
                        "type": {
                          "response": {
                            "ok": "uint128",
                            "error": "none"
                          }
                        }
                      }
                    },
                    {
                      "name": "test-emit-event",
                      "access": "public",
                      "args": [],
                      "outputs": {
                        "type": {
                          "response": {
                            "ok": "uint128",
                            "error": "none"
                          }
                        }
                      }
                    },
                    {
                      "name": "test-event-types",
                      "access": "public",
                      "args": [],
                      "outputs": {
                        "type": {
                          "response": {
                            "ok": "uint128",
                            "error": "none"
                          }
                        }
                      }
                    }
                  ],
                  "variables": [
                    {
                      "name": "recipient",
                      "type": "principal",
                      "access": "constant"
                    },
                    {
                      "name": "sender",
                      "type": "principal",
                      "access": "constant"
                    }
                  ],
                  "maps": [
                    {
                      "name": "store",
                      "key": [
                        {
                          "name": "key",
                          "type": {
                            "buffer": {
                              "length": 32
                            }
                          }
                        }
                      ],
                      "value": [
                        {
                          "name": "value",
                          "type": {
                            "buffer": {
                              "length": 32
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "fungible_tokens": [
                    {
                      "name": "novel-token-19"
                    }
                  ],
                  "non_fungible_tokens": [
                    {
                      "name": "hello-nft",
                      "type": "uint128"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "stacks_address",
          "in": "path",
          "required": true,
          "description": "Stacks address",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contract_name",
          "in": "path",
          "required": true,
          "description": "Contract name",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/v2/map_entry/{stacks_address}/{contract_name}/{map_name}": {
      "post": {
        "summary": "Get specific data-map inside a contract",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "get_contract_data_map",
        "description": "Attempt to fetch data from a contract data map. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The map is identified with [Map Name].\n\nThe key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string atom.\n\nIn the response, `data` is the hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "data": "0x01ce...",
                  "proof": "0x01ab..."
                }
              }
            }
          },
          "400": {
            "description": "Failed loading data map"
          }
        },
        "parameters": [
          {
            "name": "stacks_address",
            "in": "path",
            "required": true,
            "description": "Stacks address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contract_name",
            "in": "path",
            "required": true,
            "description": "Contract name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "map_name",
            "in": "path",
            "required": true,
            "description": "Map name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proof",
            "in": "query",
            "description": "Returns object without the proof field",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Hex string serialization of the lookup key (which should be a Clarity value)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v2/contracts/source/{stacks_address}/{contract_name}": {
      "get": {
        "summary": "Get contract source",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "get_contract_source",
        "description": "Returns the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request to get contract source",
                  "title": "ContractSourceResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "source",
                    "publish_height",
                    "proof"
                  ],
                  "properties": {
                    "source": {
                      "type": "string"
                    },
                    "publish_height": {
                      "type": "integer"
                    },
                    "proof": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "source": "(define-constant sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(define-constant recipient 'SM2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQVX8X0G)\n\n(define-fungible-token novel-token-19)\n(begin (ft-mint? novel-token-19 u12 sender))\n(begin (ft-transfer? novel-token-19 u2 sender recipient))\n\n(define-non-fungible-token hello-nft uint)\n(begin (nft-mint? hello-nft u1 sender))\n(begin (nft-mint? hello-nft u2 sender))\n(begin (nft-transfer? hello-nft u1 sender recipient))\n\n(define-public (test-emit-event)\n    (begin\n        (print \"Event! Hello world\")\n        (ok u1)))\n(begin (test-emit-event))\n\n(define-public (test-event-types)\n    (begin\n        (unwrap-panic (ft-mint? novel-token-19 u3 recipient))\n        (unwrap-panic (nft-mint? hello-nft u2 recipient))\n        (unwrap-panic (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR))\n        (unwrap-panic (stx-burn? u20 tx-sender))\n        (ok u1)))\n\n(define-map store ((key (buff 32))) ((value (buff 32))))\n(define-public (get-value (key (buff 32)))\n    (begin\n        (match (map-get? store ((key key)))\n            entry (ok (get value entry))\n            (err 0))))\n(define-public (set-value (key (buff 32)) (value (buff 32)))\n    (begin\n        (map-set store ((key key)) ((value value)))\n        (ok u1)))",
                  "publish_height": 3196,
                  "proof": "0000001104060000001ec4e..."
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "stacks_address",
          "in": "path",
          "required": true,
          "description": "Stacks address",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contract_name",
          "in": "path",
          "required": true,
          "description": "Contract name",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "proof",
          "in": "query",
          "description": "Returns object without the proof field if set to 0",
          "schema": {
            "type": "integer"
          }
        }
      ]
    },
    "/v2/contracts/call-read/{stacks_address}/{contract_name}/{function_name}": {
      "post": {
        "summary": "Call read-only function",
        "tags": [
          "Smart Contracts"
        ],
        "operationId": "call_read_only_function",
        "description": "Call a read-only public function on a given smart contract.\n\nThe smart contract and function are specified using the URL path. The arguments and the simulated tx-sender are supplied via the POST body in the following JSON format:\n",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "okay": true,
                      "result": "0x0011..."
                    }
                  },
                  "fail": {
                    "value": {
                      "error": "transaction rejected",
                      "reason": "BadNonce",
                      "reason_data": {
                        "actual": 3,
                        "expected": 0,
                        "is_origin": true,
                        "principal": "ST2MVNFYF6H9DCMAV3HVNHTJVVE3CFWT1JYMH1EZB"
                      },
                      "txid": "0x4068179cb9169b969c80518d83890f8b808a70ab998dd227149221be9480a616"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "stacks_address",
          "in": "path",
          "required": true,
          "description": "Stacks address",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contract_name",
          "in": "path",
          "required": true,
          "description": "Contract name",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "function_name",
          "in": "path",
          "required": true,
          "description": "Function name",
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/extended/v1/address/{principal}/balances": {
      "get": {
        "summary": "Get account balances",
        "tags": [
          "Accounts"
        ],
        "operationId": "get_account_balance",
        "parameters": [
          {
            "name": "principal",
            "in": "path",
            "description": "Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns address balances",
                  "title": "AddressBalanceResponse",
                  "type": "object",
                  "required": [
                    "stx",
                    "fungible_tokens",
                    "non_fungible_tokens"
                  ],
                  "properties": {
                    "stx": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "Balance",
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "balance",
                        "total_sent",
                        "total_received"
                      ],
                      "properties": {
                        "balance": {
                          "type": "string"
                        },
                        "total_sent": {
                          "type": "string"
                        },
                        "total_received": {
                          "type": "string"
                        }
                      }
                    },
                    "fungible_tokens": {
                      "type": "object",
                      "patternProperties": {
                        "*": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "Balance",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "balance",
                            "total_sent",
                            "total_received"
                          ],
                          "properties": {
                            "balance": {
                              "type": "string"
                            },
                            "total_sent": {
                              "type": "string"
                            },
                            "total_received": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "non_fungible_tokens": {
                      "type": "object",
                      "patternProperties": {
                        "*": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "NftBalance",
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "count",
                            "total_sent",
                            "total_received"
                          ],
                          "properties": {
                            "count": {
                              "type": "string"
                            },
                            "total_sent": {
                              "type": "string"
                            },
                            "total_received": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "stx": {
                    "balance": "1000000",
                    "total_sent": "0",
                    "total_received": "1000000"
                  },
                  "fungible_tokens": {},
                  "non_fungible_tokens": {}
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/address/{principal}/stx": {
      "get": {
        "summary": "Get account STX balance",
        "tags": [
          "Accounts"
        ],
        "operationId": "get_account_stx_balance",
        "parameters": [
          {
            "name": "principal",
            "in": "path",
            "description": "Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns address balances",
                  "title": "AddressStxBalanceResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "balance",
                    "total_sent",
                    "total_received"
                  ],
                  "properties": {
                    "balance": {
                      "type": "string"
                    },
                    "total_sent": {
                      "type": "string"
                    },
                    "total_received": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "balance": "1000000",
                  "total_sent": "0",
                  "total_received": "1000000"
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/address/{principal}/transactions": {
      "get": {
        "summary": "Get account transactions",
        "tags": [
          "Accounts"
        ],
        "operationId": "get_account_transactions",
        "parameters": [
          {
            "name": "principal",
            "in": "path",
            "description": "Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns account transactions",
                  "title": "AddressTransactionsListResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "results",
                    "limit",
                    "offset",
                    "total"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "maximum": 30
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "oneOf": [
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "MempoolTransaction",
                            "description": "Describes all transaction types on Stacks 2.0 blockchain",
                            "oneOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "MempoolTokenTransferTransaction",
                                "description": "Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset",
                                "type": "object",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode",
                                      "receipt_time",
                                      "receipt_time_iso"
                                    ],
                                    "properties": {
                                      "tx_id": {
                                        "type": "string"
                                      },
                                      "tx_status": {
                                        "type": "string",
                                        "enum": [
                                          "pending"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      },
                                      "receipt_time": {
                                        "type": "number",
                                        "description": "A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."
                                      },
                                      "receipt_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "token_transfer"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "token_transfer"
                                        ]
                                      },
                                      "token_transfer": {
                                        "type": "object",
                                        "required": [
                                          "recipient_address",
                                          "amount",
                                          "memo"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "recipient_address": {
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string",
                                            "description": "Integer string (64-bit unsigned integer)"
                                          },
                                          "memo": {
                                            "type": "string",
                                            "description": "Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "MempoolSmartContractTransaction",
                                "description": "Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode",
                                      "receipt_time",
                                      "receipt_time_iso"
                                    ],
                                    "properties": {
                                      "tx_id": {
                                        "type": "string"
                                      },
                                      "tx_status": {
                                        "type": "string",
                                        "enum": [
                                          "pending"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      },
                                      "receipt_time": {
                                        "type": "number",
                                        "description": "A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."
                                      },
                                      "receipt_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "smart_contract"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "smart_contract"
                                        ]
                                      },
                                      "smart_contract": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "contract_id",
                                          "source_code"
                                        ],
                                        "properties": {
                                          "contract_id": {
                                            "type": "string"
                                          },
                                          "source_code": {
                                            "type": "string",
                                            "description": "Clarity code of the smart contract being deployed"
                                          }
                                        }
                                      },
                                      "post_conditions": {
                                        "type": "array",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostCondition",
                                          "description": "Post-conditionscan limit the damage done to a user's assets",
                                          "anyOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionStx",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "stx"
                                                      ],
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionNonFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "type",
                                                    "asset_value",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionNonFungibleConditionCode",
                                                      "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent",
                                                        "not_sent"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "non_fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "asset_value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "MempoolContractCallTransaction",
                                "description": "Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode",
                                      "receipt_time",
                                      "receipt_time_iso"
                                    ],
                                    "properties": {
                                      "tx_id": {
                                        "type": "string"
                                      },
                                      "tx_status": {
                                        "type": "string",
                                        "enum": [
                                          "pending"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      },
                                      "receipt_time": {
                                        "type": "number",
                                        "description": "A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."
                                      },
                                      "receipt_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "contract_call",
                                      "post_conditions"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "contract_call"
                                        ]
                                      },
                                      "contract_call": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "contract_id",
                                          "function_name"
                                        ],
                                        "properties": {
                                          "contract_id": {
                                            "type": "string"
                                          },
                                          "function_name": {
                                            "type": "string",
                                            "description": "Name of the Clarity function to be invoked"
                                          }
                                        }
                                      },
                                      "post_conditions": {
                                        "type": "array",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostCondition",
                                          "description": "Post-conditionscan limit the damage done to a user's assets",
                                          "anyOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionStx",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "stx"
                                                      ],
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionNonFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "type",
                                                    "asset_value",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionNonFungibleConditionCode",
                                                      "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent",
                                                        "not_sent"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "non_fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "asset_value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "MempoolPoisonMicroblockTransaction",
                                "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode",
                                      "receipt_time",
                                      "receipt_time_iso"
                                    ],
                                    "properties": {
                                      "tx_id": {
                                        "type": "string"
                                      },
                                      "tx_status": {
                                        "type": "string",
                                        "enum": [
                                          "pending"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      },
                                      "receipt_time": {
                                        "type": "number",
                                        "description": "A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."
                                      },
                                      "receipt_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "poison_microblock"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "poison_microblock"
                                        ]
                                      },
                                      "poison_microblock": {
                                        "type": "object",
                                        "required": [
                                          "microblock_header_1",
                                          "microblock_header_2"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "microblock_header_1": {
                                            "type": "string",
                                            "description": "Hex encoded microblock header"
                                          },
                                          "microblock_header_2": {
                                            "type": "string",
                                            "description": "Hex encoded microblock header"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "MempoolCoinbaseTransaction",
                                "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode",
                                      "receipt_time",
                                      "receipt_time_iso"
                                    ],
                                    "properties": {
                                      "tx_id": {
                                        "type": "string"
                                      },
                                      "tx_status": {
                                        "type": "string",
                                        "enum": [
                                          "pending"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      },
                                      "receipt_time": {
                                        "type": "number",
                                        "description": "A unix timestamp (in seconds) indicating when the transaction broadcast was received by the node."
                                      },
                                      "receipt_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when the transaction broadcast was received by the node."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "coinbase_payload"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "coinbase"
                                        ]
                                      },
                                      "coinbase_payload": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "data"
                                        ],
                                        "properties": {
                                          "data": {
                                            "type": "string",
                                            "description": "Hex encoded 32-byte scratch space for block leader's use"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "Transaction",
                            "description": "Describes all transaction types on Stacks 2.0 blockchain",
                            "oneOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "TokenTransferTransaction",
                                "description": "Describes representation of a Type-0 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-0-transferring-an-asset",
                                "type": "object",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_index",
                                      "block_hash",
                                      "block_height",
                                      "burn_block_time",
                                      "burn_block_time_iso",
                                      "canonical",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode"
                                    ],
                                    "properties": {
                                      "block_hash": {
                                        "type": "string",
                                        "description": "Hash of the blocked this transactions was associated with"
                                      },
                                      "block_height": {
                                        "type": "integer",
                                        "description": "Height of the block this transactions was associated with"
                                      },
                                      "burn_block_time": {
                                        "type": "integer",
                                        "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                      },
                                      "burn_block_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                      },
                                      "canonical": {
                                        "type": "boolean",
                                        "description": "Set to `true` if block corresponds to the canonical chain tip"
                                      },
                                      "tx_id": {
                                        "type": "string",
                                        "description": "Transaction ID"
                                      },
                                      "tx_index": {
                                        "type": "integer",
                                        "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                      },
                                      "tx_status": {
                                        "description": "Status of the transaction",
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionStatus",
                                        "type": "string",
                                        "enum": [
                                          "success",
                                          "pending",
                                          "abort_by_response",
                                          "abort_by_post_condition"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string",
                                            "description": "Hex string representing the value fo the transaction result"
                                          },
                                          "repr": {
                                            "type": "string",
                                            "description": "Readable string of the transaction result"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string",
                                        "description": "Address of the transaction initiator"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "token_transfer",
                                      "events"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "token_transfer"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "description": "List of transaction events",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEvent",
                                          "oneOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventSmartContractLog",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "contract_log"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "smart_contract_log"
                                                      ]
                                                    },
                                                    "contract_log": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "contract_id",
                                                        "topic",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "contract_id": {
                                                          "type": "string"
                                                        },
                                                        "topic": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventStxAsset",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "stx_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "type": "object",
                                                      "title": "TransactionEventAsset",
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                                          "title": "TransactionEventAssetType",
                                                          "type": "string",
                                                          "enum": [
                                                            "transfer",
                                                            "mint",
                                                            "burn"
                                                          ]
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "amount"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventNonFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "non_fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "token_transfer": {
                                        "type": "object",
                                        "required": [
                                          "recipient_address",
                                          "amount",
                                          "memo"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "recipient_address": {
                                            "type": "string"
                                          },
                                          "amount": {
                                            "type": "string",
                                            "description": "Transfer amount as Integer string (64-bit unsigned integer)"
                                          },
                                          "memo": {
                                            "type": "string",
                                            "description": "Hex encoded arbitrary message, up to 34 bytes length (should try decoding to an ASCII string)"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "SmartContractTransaction",
                                "description": "Describes representation of a Type-1 Stacks 2.0 transaction. https://github.com/blockstack/stacks-blockchain/blob/master/sip/sip-005-blocks-and-transactions.md#type-1-instantiating-a-smart-contract",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_index",
                                      "block_hash",
                                      "block_height",
                                      "burn_block_time",
                                      "burn_block_time_iso",
                                      "canonical",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode"
                                    ],
                                    "properties": {
                                      "block_hash": {
                                        "type": "string",
                                        "description": "Hash of the blocked this transactions was associated with"
                                      },
                                      "block_height": {
                                        "type": "integer",
                                        "description": "Height of the block this transactions was associated with"
                                      },
                                      "burn_block_time": {
                                        "type": "integer",
                                        "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                      },
                                      "burn_block_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                      },
                                      "canonical": {
                                        "type": "boolean",
                                        "description": "Set to `true` if block corresponds to the canonical chain tip"
                                      },
                                      "tx_id": {
                                        "type": "string",
                                        "description": "Transaction ID"
                                      },
                                      "tx_index": {
                                        "type": "integer",
                                        "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                      },
                                      "tx_status": {
                                        "description": "Status of the transaction",
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionStatus",
                                        "type": "string",
                                        "enum": [
                                          "success",
                                          "pending",
                                          "abort_by_response",
                                          "abort_by_post_condition"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string",
                                            "description": "Hex string representing the value fo the transaction result"
                                          },
                                          "repr": {
                                            "type": "string",
                                            "description": "Readable string of the transaction result"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string",
                                        "description": "Address of the transaction initiator"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "smart_contract",
                                      "events"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "smart_contract"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "description": "List of transaction events",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEvent",
                                          "oneOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventSmartContractLog",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "contract_log"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "smart_contract_log"
                                                      ]
                                                    },
                                                    "contract_log": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "contract_id",
                                                        "topic",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "contract_id": {
                                                          "type": "string"
                                                        },
                                                        "topic": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventStxAsset",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "stx_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "type": "object",
                                                      "title": "TransactionEventAsset",
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                                          "title": "TransactionEventAssetType",
                                                          "type": "string",
                                                          "enum": [
                                                            "transfer",
                                                            "mint",
                                                            "burn"
                                                          ]
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "amount"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventNonFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "non_fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "smart_contract": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "contract_id",
                                          "source_code"
                                        ],
                                        "properties": {
                                          "contract_id": {
                                            "type": "string",
                                            "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                          },
                                          "source_code": {
                                            "type": "string",
                                            "description": "Clarity code of the smart contract being deployed"
                                          }
                                        }
                                      },
                                      "post_conditions": {
                                        "type": "array",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostCondition",
                                          "description": "Post-conditionscan limit the damage done to a user's assets",
                                          "anyOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionStx",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "stx"
                                                      ],
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionNonFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "type",
                                                    "asset_value",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionNonFungibleConditionCode",
                                                      "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent",
                                                        "not_sent"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "non_fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "asset_value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "ContractCallTransaction",
                                "description": "Describes representation of a Type 2 Stacks 2.0 transaction: Contract Call",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_index",
                                      "block_hash",
                                      "block_height",
                                      "burn_block_time",
                                      "burn_block_time_iso",
                                      "canonical",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode"
                                    ],
                                    "properties": {
                                      "block_hash": {
                                        "type": "string",
                                        "description": "Hash of the blocked this transactions was associated with"
                                      },
                                      "block_height": {
                                        "type": "integer",
                                        "description": "Height of the block this transactions was associated with"
                                      },
                                      "burn_block_time": {
                                        "type": "integer",
                                        "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                      },
                                      "burn_block_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                      },
                                      "canonical": {
                                        "type": "boolean",
                                        "description": "Set to `true` if block corresponds to the canonical chain tip"
                                      },
                                      "tx_id": {
                                        "type": "string",
                                        "description": "Transaction ID"
                                      },
                                      "tx_index": {
                                        "type": "integer",
                                        "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                      },
                                      "tx_status": {
                                        "description": "Status of the transaction",
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionStatus",
                                        "type": "string",
                                        "enum": [
                                          "success",
                                          "pending",
                                          "abort_by_response",
                                          "abort_by_post_condition"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string",
                                            "description": "Hex string representing the value fo the transaction result"
                                          },
                                          "repr": {
                                            "type": "string",
                                            "description": "Readable string of the transaction result"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string",
                                        "description": "Address of the transaction initiator"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "contract_call",
                                      "post_conditions",
                                      "events"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "contract_call"
                                        ]
                                      },
                                      "events": {
                                        "type": "array",
                                        "description": "List of transaction events",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "type": "object",
                                          "title": "TransactionEvent",
                                          "oneOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventSmartContractLog",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "contract_log"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "smart_contract_log"
                                                      ]
                                                    },
                                                    "contract_log": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "contract_id",
                                                        "topic",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "contract_id": {
                                                          "type": "string"
                                                        },
                                                        "topic": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventStxAsset",
                                              "description": "Only present in `smart_contract` and `contract_call` tx types.",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "stx_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "type": "object",
                                                      "title": "TransactionEventAsset",
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                                          "title": "TransactionEventAssetType",
                                                          "type": "string",
                                                          "enum": [
                                                            "transfer",
                                                            "mint",
                                                            "burn"
                                                          ]
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "amount"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "amount": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "type": "object",
                                              "title": "TransactionEventNonFungibleAsset",
                                              "allOf": [
                                                {
                                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                                  "type": "object",
                                                  "required": [
                                                    "event_index"
                                                  ],
                                                  "properties": {
                                                    "event_index": {
                                                      "type": "integer"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "event_type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "event_type": {
                                                      "type": "string",
                                                      "enum": [
                                                        "non_fungible_token_asset"
                                                      ]
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "asset_event_type",
                                                        "asset_id",
                                                        "sender",
                                                        "recipient",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "asset_event_type": {
                                                          "type": "string"
                                                        },
                                                        "asset_id": {
                                                          "type": "string"
                                                        },
                                                        "sender": {
                                                          "type": "string"
                                                        },
                                                        "recipient": {
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "required": [
                                                            "hex",
                                                            "repr"
                                                          ],
                                                          "properties": {
                                                            "hex": {
                                                              "type": "string"
                                                            },
                                                            "repr": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "contract_call": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "contract_id",
                                          "function_name",
                                          "function_signature"
                                        ],
                                        "properties": {
                                          "contract_id": {
                                            "type": "string",
                                            "description": "Contract identifier formatted as `<principaladdress>.<contract_name>`"
                                          },
                                          "function_name": {
                                            "type": "string",
                                            "description": "Name of the Clarity function to be invoked"
                                          },
                                          "function_signature": {
                                            "type": "string",
                                            "description": "Function definition, including function name and type as well as parameter names and types"
                                          },
                                          "function_args": {
                                            "type": "array",
                                            "description": "List of arguments used to invoke the function",
                                            "items": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "required": [
                                                "hex",
                                                "repr",
                                                "name",
                                                "type"
                                              ],
                                              "properties": {
                                                "hex": {
                                                  "type": "string"
                                                },
                                                "repr": {
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "post_conditions": {
                                        "type": "array",
                                        "items": {
                                          "$schema": "http://json-schema.org/draft-07/schema#",
                                          "title": "PostCondition",
                                          "description": "Post-conditionscan limit the damage done to a user's assets",
                                          "anyOf": [
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionStx",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "stx"
                                                      ],
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "amount",
                                                    "type",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionFungibleConditionCode",
                                                      "description": "A fungible condition code encodes a statement being made for either STX or a fungible token, with respect to the originating account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent_equal_to",
                                                        "sent_greater_than",
                                                        "sent_greater_than_or_equal_to",
                                                        "sent_less_than",
                                                        "sent_less_than_or_equal_to"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "amount": {
                                                      "type": "string"
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "$schema": "http://json-schema.org/draft-07/schema#",
                                              "title": "PostConditionNonFungible",
                                              "type": "object",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "principal"
                                                  ],
                                                  "properties": {
                                                    "principal": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionPrincipal",
                                                      "type": "object",
                                                      "anyOf": [
                                                        {
                                                          "type": "object",
                                                          "additionalProperties": false,
                                                          "description": "Principal Origin",
                                                          "required": [
                                                            "type_id"
                                                          ],
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_origin"
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Standard",
                                                          "required": [
                                                            "type_id",
                                                            "address"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_standard"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "object",
                                                          "description": "Principal Contract",
                                                          "required": [
                                                            "type_id",
                                                            "address",
                                                            "contract_name"
                                                          ],
                                                          "additionalProperties": false,
                                                          "properties": {
                                                            "type_id": {
                                                              "type": "string",
                                                              "description": "String literal of type `PostConditionPrincipalType`",
                                                              "enum": [
                                                                "principal_contract"
                                                              ]
                                                            },
                                                            "address": {
                                                              "type": "string"
                                                            },
                                                            "contract_name": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "condition_code",
                                                    "type",
                                                    "asset_value",
                                                    "asset"
                                                  ],
                                                  "properties": {
                                                    "condition_code": {
                                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                                      "title": "PostConditionNonFungibleConditionCode",
                                                      "description": "A non-fungible condition code encodes a statement being made about a non-fungible token, with respect to whether or not the particular non-fungible token is owned by the account.",
                                                      "type": "string",
                                                      "enum": [
                                                        "sent",
                                                        "not_sent"
                                                      ]
                                                    },
                                                    "type": {
                                                      "enum": [
                                                        "non_fungible"
                                                      ],
                                                      "type": "string"
                                                    },
                                                    "asset_value": {
                                                      "type": "object",
                                                      "additionalProperties": false,
                                                      "required": [
                                                        "hex",
                                                        "repr"
                                                      ],
                                                      "properties": {
                                                        "hex": {
                                                          "type": "string"
                                                        },
                                                        "repr": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "asset": {
                                                      "type": "object",
                                                      "required": [
                                                        "asset_name",
                                                        "contract_address",
                                                        "contract_name"
                                                      ],
                                                      "additionalProperties": false,
                                                      "properties": {
                                                        "asset_name": {
                                                          "type": "string"
                                                        },
                                                        "contract_address": {
                                                          "type": "string"
                                                        },
                                                        "contract_name": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "PoisonMicroblockTransaction",
                                "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_index",
                                      "block_hash",
                                      "block_height",
                                      "burn_block_time",
                                      "burn_block_time_iso",
                                      "canonical",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode"
                                    ],
                                    "properties": {
                                      "block_hash": {
                                        "type": "string",
                                        "description": "Hash of the blocked this transactions was associated with"
                                      },
                                      "block_height": {
                                        "type": "integer",
                                        "description": "Height of the block this transactions was associated with"
                                      },
                                      "burn_block_time": {
                                        "type": "integer",
                                        "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                      },
                                      "burn_block_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                      },
                                      "canonical": {
                                        "type": "boolean",
                                        "description": "Set to `true` if block corresponds to the canonical chain tip"
                                      },
                                      "tx_id": {
                                        "type": "string",
                                        "description": "Transaction ID"
                                      },
                                      "tx_index": {
                                        "type": "integer",
                                        "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                      },
                                      "tx_status": {
                                        "description": "Status of the transaction",
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionStatus",
                                        "type": "string",
                                        "enum": [
                                          "success",
                                          "pending",
                                          "abort_by_response",
                                          "abort_by_post_condition"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string",
                                            "description": "Hex string representing the value fo the transaction result"
                                          },
                                          "repr": {
                                            "type": "string",
                                            "description": "Readable string of the transaction result"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string",
                                        "description": "Address of the transaction initiator"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "poison_microblock"
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "poison_microblock"
                                        ]
                                      },
                                      "poison_microblock": {
                                        "type": "object",
                                        "required": [
                                          "microblock_header_1",
                                          "microblock_header_2"
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "microblock_header_1": {
                                            "type": "string",
                                            "description": "Hex encoded microblock header"
                                          },
                                          "microblock_header_2": {
                                            "type": "string",
                                            "description": "Hex encoded microblock header"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "title": "CoinbaseTransaction",
                                "description": "Describes representation of a Type 3 Stacks 2.0 transaction: Poison Microblock",
                                "allOf": [
                                  {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "description": "Abstract transaction. This schema makes up all properties common between all Stacks 2.0 transaction types",
                                    "type": "object",
                                    "required": [
                                      "tx_id",
                                      "tx_index",
                                      "block_hash",
                                      "block_height",
                                      "burn_block_time",
                                      "burn_block_time_iso",
                                      "canonical",
                                      "tx_status",
                                      "fee_rate",
                                      "sender_address",
                                      "sponsored",
                                      "post_condition_mode"
                                    ],
                                    "properties": {
                                      "block_hash": {
                                        "type": "string",
                                        "description": "Hash of the blocked this transactions was associated with"
                                      },
                                      "block_height": {
                                        "type": "integer",
                                        "description": "Height of the block this transactions was associated with"
                                      },
                                      "burn_block_time": {
                                        "type": "integer",
                                        "description": "Unix timestamp (in seconds) indicating when this block was mined"
                                      },
                                      "burn_block_time_iso": {
                                        "type": "string",
                                        "description": "An ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ) timestamp indicating when this block was mined."
                                      },
                                      "canonical": {
                                        "type": "boolean",
                                        "description": "Set to `true` if block corresponds to the canonical chain tip"
                                      },
                                      "tx_id": {
                                        "type": "string",
                                        "description": "Transaction ID"
                                      },
                                      "tx_index": {
                                        "type": "integer",
                                        "description": "Index of the transaction, indicating the order. Starts at `0` and increases with each transaction"
                                      },
                                      "tx_status": {
                                        "description": "Status of the transaction",
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionStatus",
                                        "type": "string",
                                        "enum": [
                                          "success",
                                          "pending",
                                          "abort_by_response",
                                          "abort_by_post_condition"
                                        ]
                                      },
                                      "tx_result": {
                                        "type": "object",
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "description": "Result of the transaction. For contract calls, this will show the value returned by the call. For other transaction types, this will return a boolean indicating the success of the transaction.",
                                        "additionalProperties": false,
                                        "properties": {
                                          "hex": {
                                            "type": "string",
                                            "description": "Hex string representing the value fo the transaction result"
                                          },
                                          "repr": {
                                            "type": "string",
                                            "description": "Readable string of the transaction result"
                                          }
                                        }
                                      },
                                      "fee_rate": {
                                        "type": "string",
                                        "description": "Transaction fee as Integer string (64-bit unsigned integer)."
                                      },
                                      "sender_address": {
                                        "type": "string",
                                        "description": "Address of the transaction initiator"
                                      },
                                      "sponsored": {
                                        "type": "boolean",
                                        "description": "Denotes whether the originating account is the same as the paying account"
                                      },
                                      "sponsor_address": {
                                        "type": "string"
                                      },
                                      "post_condition_mode": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "PostConditionMode",
                                        "description": "",
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "deny"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tx_type",
                                      "coinbase_payload"
                                    ],
                                    "properties": {
                                      "tx_type": {
                                        "type": "string",
                                        "enum": [
                                          "coinbase"
                                        ]
                                      },
                                      "coinbase_payload": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "data"
                                        ],
                                        "properties": {
                                          "data": {
                                            "type": "string",
                                            "description": "Hex encoded 32-byte scratch space for block leader's use"
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "limit": 20,
                  "offset": 0,
                  "total": 4989,
                  "results": [
                    {
                      "tx_id": "0xb16077b94222bc1466396d30df13db460864e85ce929a20aae0a2ac80b31e4e2",
                      "tx_status": "success",
                      "tx_type": "coinbase",
                      "fee_rate": "0",
                      "sender_address": "ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V",
                      "sponsored": false,
                      "post_condition_mode": "deny",
                      "block_hash": "0x83f84f814c1b00ddb672d93b97d06c8326f76746d90a979c12b69e54beb73f69",
                      "block_height": 5603,
                      "burn_block_time": 1594335838,
                      "canonical": true,
                      "tx_index": 0,
                      "coinbase_payload": {
                        "data": "0x0000000000000000000000000000000000000000000000000000000000000000"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/address/{principal}/assets": {
      "get": {
        "summary": "Get account assets",
        "tags": [
          "Accounts"
        ],
        "operationId": "get_account_assets",
        "parameters": [
          {
            "name": "principal",
            "in": "path",
            "description": "Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that returns address assets",
                  "title": "AddressAssetsListResponse",
                  "type": "object",
                  "required": [
                    "results",
                    "limit",
                    "offset",
                    "total"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "maximum": 30
                    },
                    "offset": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "type": "object",
                        "title": "TransactionEvent",
                        "oneOf": [
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "TransactionEventSmartContractLog",
                            "description": "Only present in `smart_contract` and `contract_call` tx types.",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "required": [
                                  "event_index"
                                ],
                                "properties": {
                                  "event_index": {
                                    "type": "integer"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "event_type",
                                  "contract_log"
                                ],
                                "properties": {
                                  "event_type": {
                                    "type": "string",
                                    "enum": [
                                      "smart_contract_log"
                                    ]
                                  },
                                  "contract_log": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "contract_id",
                                      "topic",
                                      "value"
                                    ],
                                    "properties": {
                                      "contract_id": {
                                        "type": "string"
                                      },
                                      "topic": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "TransactionEventStxAsset",
                            "description": "Only present in `smart_contract` and `contract_call` tx types.",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "required": [
                                  "event_index"
                                ],
                                "properties": {
                                  "event_index": {
                                    "type": "integer"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "event_type",
                                  "asset"
                                ],
                                "properties": {
                                  "event_type": {
                                    "type": "string",
                                    "enum": [
                                      "stx_asset"
                                    ]
                                  },
                                  "asset": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "type": "object",
                                    "title": "TransactionEventAsset",
                                    "additionalProperties": false,
                                    "properties": {
                                      "asset_event_type": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "TransactionEventAssetType",
                                        "type": "string",
                                        "enum": [
                                          "transfer",
                                          "mint",
                                          "burn"
                                        ]
                                      },
                                      "asset_id": {
                                        "type": "string"
                                      },
                                      "sender": {
                                        "type": "string"
                                      },
                                      "recipient": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "TransactionEventFungibleAsset",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "required": [
                                  "event_index"
                                ],
                                "properties": {
                                  "event_index": {
                                    "type": "integer"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "event_type",
                                  "asset"
                                ],
                                "properties": {
                                  "event_type": {
                                    "type": "string",
                                    "enum": [
                                      "fungible_token_asset"
                                    ]
                                  },
                                  "asset": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "asset_event_type",
                                      "asset_id",
                                      "sender",
                                      "recipient",
                                      "amount"
                                    ],
                                    "properties": {
                                      "asset_event_type": {
                                        "type": "string"
                                      },
                                      "asset_id": {
                                        "type": "string"
                                      },
                                      "sender": {
                                        "type": "string"
                                      },
                                      "recipient": {
                                        "type": "string"
                                      },
                                      "amount": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "title": "TransactionEventNonFungibleAsset",
                            "allOf": [
                              {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "required": [
                                  "event_index"
                                ],
                                "properties": {
                                  "event_index": {
                                    "type": "integer"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "event_type",
                                  "asset"
                                ],
                                "properties": {
                                  "event_type": {
                                    "type": "string",
                                    "enum": [
                                      "non_fungible_token_asset"
                                    ]
                                  },
                                  "asset": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "asset_event_type",
                                      "asset_id",
                                      "sender",
                                      "recipient",
                                      "value"
                                    ],
                                    "properties": {
                                      "asset_event_type": {
                                        "type": "string"
                                      },
                                      "asset_id": {
                                        "type": "string"
                                      },
                                      "sender": {
                                        "type": "string"
                                      },
                                      "recipient": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "hex",
                                          "repr"
                                        ],
                                        "properties": {
                                          "hex": {
                                            "type": "string"
                                          },
                                          "repr": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "limit": 20,
                  "offset": 0,
                  "total": 0,
                  "results": [
                    {
                      "event_index": 0,
                      "event_type": "stx_asset",
                      "asset": {
                        "asset_event_type": "transfer",
                        "sender": "STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6",
                        "recipient": "ST2TJRHDHMYBQ417HFB0BDX430TQA5PXRX6495G1V",
                        "amount": "500000"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/accounts/{principal}": {
      "get": {
        "summary": "Get account info",
        "tags": [
          "Accounts"
        ],
        "operationId": "get_account_info",
        "description": "Get the account data for the provided principal\n\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is a unsigned 64-bit integer, and the proofs are provided as hex strings.\n\nFor non-existent accounts, this does not 404, rather it returns an object with balance and nonce of 0.\n",
        "parameters": [
          {
            "name": "principal",
            "in": "path",
            "description": "Stacks address or a Contract identifier (e.g. `SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info`)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "proof",
            "in": "query",
            "description": "Returns object without the proof field if set to 0",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request for account data",
                  "title": "AccountDataResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "balance",
                    "nonce",
                    "balance_proof",
                    "nonce_proof"
                  ],
                  "properties": {
                    "balance": {
                      "type": "string"
                    },
                    "nonce": {
                      "type": "integer"
                    },
                    "balance_proof": {
                      "type": "string"
                    },
                    "nonce_proof": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "balance": "0x0000000000000000000000000007a120",
                  "nonce": 2867,
                  "balance_proof": "0xabce",
                  "nonce_proof": "0xabcd"
                }
              }
            }
          }
        }
      }
    },
    "/v2/fees/transfer": {
      "get": {
        "summary": "Get estimated fee",
        "tags": [
          "Fees"
        ],
        "operationId": "get_fee_transfer",
        "description": "Get an estimated fee rate for STX transfer transactions. This a a fee rate / byte, and is returned as a JSON integer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": 1
              }
            }
          }
        }
      }
    },
    "/v2/info": {
      "get": {
        "summary": "Get Core API info",
        "description": "Get Core API information",
        "tags": [
          "Info"
        ],
        "operationId": "get_core_api_info",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "description": "GET request that core node information",
                  "title": "CoreNodeInfoResponse",
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "peer_version",
                    "burn_consensus",
                    "burn_block_height",
                    "stable_burn_consensus",
                    "stable_burn_block_height",
                    "server_version",
                    "network_id",
                    "parent_network_id",
                    "stacks_tip_height",
                    "stacks_tip",
                    "stacks_tip_burn_block",
                    "exit_at_block_height"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer"
                    },
                    "peer_version": {
                      "type": "integer"
                    },
                    "burn_consensus": {
                      "type": "string"
                    },
                    "burn_block_height": {
                      "type": "integer"
                    },
                    "stable_burn_consensus": {
                      "type": "string"
                    },
                    "stable_burn_block_height": {
                      "type": "integer"
                    },
                    "server_version": {
                      "type": "string"
                    },
                    "network_id": {
                      "type": "integer"
                    },
                    "parent_network_id": {
                      "type": "integer"
                    },
                    "stacks_tip_height": {
                      "type": "integer"
                    },
                    "stacks_tip": {
                      "type": "string"
                    },
                    "stacks_tip_burn_block": {
                      "type": "string"
                    },
                    "exit_at_block_height": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "peer_version": 385875968,
                  "burn_consensus": "a186ed6e649ddc85b250f74ba1f1b77375ebaa60",
                  "burn_block_height": 6646,
                  "stable_burn_consensus": "49af83220614f29eb1946a533b8392bf1f4f3dce",
                  "stable_burn_block_height": 6645,
                  "server_version": "blockstack-core 0.0.1 => 23.0.0.0 (master:683682f2e+, release build, linux [x86_64])",
                  "network_id": 2147483648,
                  "parent_network_id": 3669344250,
                  "stacks_tip_height": 3334,
                  "stacks_tip": "01f50825b69741938df0bf4324e6f4f4f48053f23f544426eced907eb8a57d71",
                  "stacks_tip_burn_block": "132e9aea7fd50166ca9d0ad023b47c47e81c33ba47df767bbac1de0f2fb98535",
                  "exit_at_block_height": 20460
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/status": {
      "get": {
        "summary": "Get Blockchain API status",
        "description": "Get Blockchain API status",
        "tags": [
          "Info"
        ],
        "operationId": "get_status",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "value": {
                      "status": "ready"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/extended/v1/search/{id}": {
      "get": {
        "summary": "Search",
        "description": "Search blocks, transactions, contracts, or accounts by hash/ID",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The hex hash string for a block or transaction, account address, or contract address"
          }
        ],
        "operationId": "search_by_id",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
                  "found": true,
                  "result": {
                    "entity_id": "ST2P7B9G6Y55QWZJ9B93DVSEG5S6Z4PFJHB3XRKHW.hello_world",
                    "entity_type": "contract_address",
                    "tx_data": {
                      "canonical": true,
                      "block_hash": "0xb076fd3983e63bbf28ae615daa31c5b6084d23ceeb920c54f1ea666244415457",
                      "burn_block_time": 1595229199,
                      "block_height": 648,
                      "tx_type": "smart_contract"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "found": false,
                  "result": {
                    "entity_type": "unknown_hash"
                  },
                  "error": "No block or transaction found with hash \"0xabc123\""
                }
              }
            }
          }
        }
      }
    }
  }
}
